  function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition, showError);
        } else {
            FailToaster("Geolocation is not supported by this browser.");

        }
    }


function showPosition(position) {
        $("#Latitude").val(position.coords.latitude);
        $("#Longitude").val(position.coords.longitude);

        @*var Lat = 0, Lon = 0;
        Lat = parseFloat('@Lat');
        Lon = parseFloat('@Lon');*@
        //var dis = getDistanceFromLatLonInKm(position.coords.latitude, position.coords.longitude, Lat, Lon);
        //$("#PunchDistances").val(dis);
        $("#Location").val($("#Latitude").val() + "," + $("#Longitude").val());
    }




 function showError(error) {
        switch (error.code) {
            case error.PERMISSION_DENIED:
                $("#Error").val("User denied the request for Geolocation.")
                break;
            case error.POSITION_UNAVAILABLE:
                $("#Error").val("Location information is unavailable.")
                break;
            case error.TIMEOUT:
                $("#Error").val("The request to get user location timed out.")
                break;
            case error.UNKNOWN_ERROR:
                $("#Error").val("An unknown error occurred.")
                break;
        }
    }




   function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {
        var R = 6371; // Radius of the earth in km
        var dLat = deg2rad(lat2 - lat1);  // deg2rad below
        var dLon = deg2rad(lon2 - lon1);
        var a =
            Math.sin(dLat / 2) * Math.sin(dLat / 2) +
            Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *
            Math.sin(dLon / 2) * Math.sin(dLon / 2)
            ;
        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
        var d = R * c; // Distance in km
        return d;
    }

    function deg2rad(deg) {
        return deg * (Math.PI / 180)
    }