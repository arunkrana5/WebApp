@model ChangePassword

@using (Ajax.BeginForm("ChangePassword", "Home",
        new { src = ViewBag.src },
         new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnChangePasswordSuccess", OnBegin = "ShowLoadingDialog()" },
            new { @id = "ChangePasswordForm" })
    )
{

    <div class="form bg-white">
        <div class="form-container">
            <div class="form-form">
                <div class="form-form-wrap">
                    <div class="form-container row d-flex justify-content-center">
                        <div class="form-content col-xl-6 col-sm-12 col-md-6 d-flex flex-column align-items-center justify-content-start">
                            <h1 class="mr-5">Change  <a href="#"><span class="brand-name">Password</span></a></h1>
                            <div class="text-left">
                                <div class="form">

                                    <div id="password-field" class="field-wrapper input mb-2">
                                        @Html.TextBoxFor(model => model.OldPassword, new { @class = "form-control lock", @autofocus = "true", @placeholder = "Old Password" })
                                        @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                                    </div>

                                    <div id="password-field" class="field-wrapper input mb-2">
                                        @Html.TextBoxFor(model => model.NewPassword, new { @class = "form-control lock", @autofocus = "true", @placeholder = "New Password", @type = "password" })
                                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                                    </div>

                                    <div id="password-field" class="field-wrapper input mb-2">
                                        @Html.TextBoxFor(model => model.ConfirmPassword, new { @class = "form-control lock", @autofocus = "true", @placeholder = "Confirm Password", @type = "password" })
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="d-sm-flex justify-content-between mt-4">

                                        <div class="field-wrapper">
                                            <button type="submit" name="Command" value="Submit" class="btn v-btn">Change Password</button>
                                        </div>

                                    </div>

                                </div>
                            </div>

                        </div>
                        <div class="col-xl-6 col-sm-12 col-md-6 d-flex align-items-center">
                            <img src="~/assets/design/images/png/7769793_3227472.jpg" class="" width="70%" height="auto"/>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
    @*
        <div class="page-header">
            <div class="page-leftheader">
                <h4 class="page-title">Change Password</h4>
            </div>

        </div>

        <div class="row">
            <div class="col-md-8 mx-auto d-block">

                <div class="input-group mb-3">
                    <span class="input-group-addon">
                        <i class="fa fa-user"></i>
                    </span>
                    @Html.TextBoxFor(model => model.OldPassword, new { @class = "form-control", @autofocus = "true", @placeholder = "Old Password" })
                    @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                </div>
                <div class="input-group mb-4">
                    <span class="input-group-addon"><i class="fa fa-key"></i></span>
                    @Html.TextBoxFor(model => model.NewPassword, new { @class = "form-control", @autofocus = "true", @placeholder = "New Password", @type = "password" })
                    @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                </div>
                <div class="input-group mb-4">
                    <span class="input-group-addon"><i class="fa fa-key"></i></span>
                    @Html.TextBoxFor(model => model.ConfirmPassword, new { @class = "form-control", @autofocus = "true", @placeholder = "Confirm Password", @type = "password" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>

                <div class="row">
                    <div class="col-12">
                        <button name="Command" value="Submit" class="btn btn-primary btn-block" type="submit"> <i class="fe fe-arrow-right"></i> Submit</button>

                    </div>
                </div>
            </div>
        </div>*@
}


@section scripts    {
    @System.Web.Optimization.Scripts.Render("~/bundle/unobtrusivejs")
    <script>
        function OnChangePasswordSuccess(obj) {
            if (obj.Status) {
                SuccessToaster(obj.SuccessMessage);
                window.location.href = obj.RedirectURL;
            }
            else {
                CloseLoadingDialog();
                FailToaster(obj.SuccessMessage);

            }
        }
    </script>
}