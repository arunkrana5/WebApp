
@model AdminUser.Role.Add

@using (Ajax.BeginForm("_AddRole", "Tools",
        new { src = ViewBag.src  },
         new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnBegin = "ShowLoadingDialog()" },
            new { @id = "_AddRoleForm" })
    )
{
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => Model.RoleID)
<div class="row p-2">
    <div class="col-lg-6 col-md-6 col-sm-6 form-group">
        <label>Role Name<sup>*</sup></label>
        @Html.TextBoxFor(model => model.rolename, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.rolename, "", new { @class = "text-danger" })
    </div>
    <div class="col-lg-6 col-md-6 col-sm-6 form-group">
        <label>Display Name<sup>*</sup></label>
        @Html.TextBoxFor(model => model.DisplayName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
    </div>
    <div class="col-lg-6 col-md-6 col-sm-6 form-group">
        <label>Description<sup>*</sup></label>
        @Html.TextBoxFor(model => model.description, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
    </div>

    <div class="col-lg-12 col-md-12 col-sm-12 form-group">
        <label>   State  </label>
        @Html.HiddenFor(x => Model.StateIDs)
        <select onchange="FillState(this)" class="form-control applyselect" multiple="multiple">
            @if (Model.StateList != null)
            {
                foreach (var item in Model.StateList)
                {
                    if (!string.IsNullOrEmpty(Model.StateIDs))
                    {
                        <option @(("%" + Model.StateIDs.Replace(",", "%,%") + "%").Contains("%" + item.ID + "%") ? "selected" : "") value="@item.ID">@item.Name</option>
                    }
                    else
                    {
                        <option value="@item.ID">@item.Name</option>
                    }
                }
            }
        </select>
        @Html.ValidationMessageFor(model => model.StateIDs, "", new { @class = "text-danger" })

    </div>

</div>

        <div class="text-right p-2">

            @if (Model.RoleID > 0)
            {
                <button type="submit" class="btn client-save btn-primary" name="Command" value="Add"> Update</button>
            }
            else
            {
                <button type="submit" class="btn client-save btn-primary" name="Command" value="Add"> Submit</button>
            }
        </div>

    }

