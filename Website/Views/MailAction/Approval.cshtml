@model MailActionApproval
@{
    Layout = null;
    string LoginID = ClsApplicationSetting.GetSessionValue("LoginID");
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Approval</title>
    <link rel="icon" href="" type="image/x-icon" />
    <link rel="icon" href="@Url.Content("~/assets/design/images/brand/favicon.png")" type="image/png" sizes="50x50" media="(prefers-color-scheme: light)">
    <link rel="icon" href="@Url.Content("~/assets/design/images/brand/android-chrome-192x192.png")" type="image/png" sizes="50x50" media="(prefers-color-scheme: dark)">
    @Html.IncludeVersionedCss(Url.Content("~/assets/design/plugins/bootstrap/css/bootstrap.css"))
    @Html.IncludeVersionedCss(Url.Content("~/assets/design/css/mystylesheet.css"))

    <style>
        .btnProcess {
            margin-right: 15px;
            transition: all 0.3s ease;
        }

            .btnProcess:last-child {
                margin-right: 0;
            }

            .btnProcess:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }
        #toast {
            visibility: hidden;
            max-width: 26%;
            margin: auto;
            color: #fff;
            text-align: center;
            border-radius: 2px;
            position: fixed;
            z-index: 1;
            left: 0;
            right: 0;
            bottom: 30px;
            font-size: 16px;
            white-space: nowrap;
            -webkit-box-shadow: 0 5px 11px 0 rgba(0,0,0,0.18), 0 4px 15px 0 rgba(0,0,0,0.15);
            box-shadow: 0 5px 11px 0 rgba(0,0,0,0.18), 0 4px 15px 0 rgba(0,0,0,0.15);
            display: -webkit-box;
            display: flex;
            -webkit-box-orient: horizontal;
            -webkit-box-direction: normal;
            flex-direction: row;
            -webkit-box-align: center;
            align-items: center;
            padding: 10px;
            font-size: 14px;
            z-index: 99999
        }

        #toasticon {
            color: #fff;
            border-radius: 4px
        }

        #toast {
            background-color: #2a2b3c;
            border-radius: 4px
        }

            #toast .red-clr {
                color: #fff !important
            }

            #toast #toastMsg {
                padding: 5px;
                color: #ffffff;
                font-weight: bold;
                text-align: left;
                white-space: normal;
            }

        #toast {
            opacity: 0;
            transition: all 1s;
            -webkit-animation-duration: 1s;
            animation-duration: 1s;
            -webkit-animation-fill-mode: both;
            animation-fill-mode: both;
        }

            #toast.show {
                visibility: visible;
                opacity: 1;
                transform: translateX(0%) translateY(-45%);
            }

        .toaster-warning, .toaster-warning #toasticon {
            background-color: #000 !important;
        }
    </style>
</head>
<body>

    <div class="row p-2 justify-content-center">
        <div class="col-lg-6 col-md-8 col-sm-12">
            <div id="global-loader">
                <img src="/assets/design/images/svgs/loader.svg" alt="loader">
            </div>
            <div id="toast">
                <div id="toasticon"><i></i></div>
                <div id="toastMsg"></div>
            </div>
            @using (Ajax.BeginForm("Approval", "MailAction",
                new { src = ClsCommon.Encrypt("0*/MailAction/Approval*" + LoginID + "*" + @Model.ID + "*" + @Model.Doctype) },
                new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess" },
                new { @id = "_ApprovalForm", @class = "card shadow-sm p-4" }))
            {
                @*@Html.ValidationSummary()*@
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => Model.Doctype)
                @Html.HiddenFor(x => Model.ID)
                @Html.HiddenFor(x => Model.LoginID)

                <div class="form-group">
                    <label class="form-label">Remarks</label>
                    @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control", rows = "4", placeholder = "Enter your remarks here..." })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>

                <div class="d-flex justify-content-end mt-4">
                    <button type="submit" class="btn btn-success me-4 btnProcess" name="Approved" value="1">
                        <i class="fa fa-check me-2" aria-hidden="true"></i>
                        Approve
                    </button>
                    <button type="submit" class="btn btn-danger me-4 btnProcess" name="Approved" value="2">
                        <i class="fa fa-ban me-2" aria-hidden="true"></i>
                        Reject
                    </button>
                    <button type="submit" class="btn btn-warning btnProcess" name="Approved" value="3">
                        <i class="fa fa-edit me-2" aria-hidden="true"></i>
                        Review
                    </button>
                </div>
            }
        </div>
    </div>
    @Html.IncludeVersionedJs(Url.Content("~/assets/design/js/vendors/jquery-3.5.1.min.js"))
    @Html.IncludeVersionedJs(Url.Content("/assets/design/plugins/bootstrap/popper.min.js"))
    @Html.IncludeVersionedJs(Url.Content("/assets/design/plugins/bootstrap/js/bootstrap.min.js"))
    @Html.IncludeVersionedJs(Url.Content("~/assets/Scripts/CustomValidate.js"))
    @System.Web.Optimization.Scripts.Render("~/bundle/unobtrusivejs")


<script>
        $(document).ready(function () {
            CloseLoadingDialog();
        });
        function OnSuccess(obj) {
            //console.log(obj);
            ShowLoadingDialog()
            if (obj.Status) {
                SuccessToaster(obj.SuccessMessage);
                window.location.href = obj.RedirectURL;
                var LoginID = '@Model.LoginID';
                var WorkForceID = '@Model.ID';
                var DocType = '@Model.Doctype';
                Send_WorkForceMail(LoginID, WorkForceID, DocType)
            }
            else {
                CloseLoadingDialog();
                FailToaster(obj.SuccessMessage);
            }
        }
        function SuccessToaster(Message) {
            $("#toastMsg").html(Message);
            $("#toasticon i").addClass("fa fa-check");
            var x = document.getElementById("toast")
            x.className = "show";
            setTimeout(function () { x.className = x.className.replace("show", ""); }, 4000);
        }

        function FailToaster(Message) {
            $("#toastMsg").html(Message);
            $("#toasticon i").addClass("fa fa-exclamation-triangle");
            var x = document.getElementById("toast")
            x.className = "show toaster-warning";
            setTimeout(function () { x.className = x.className.replace("show toaster-warning", ""); }, 4000);
        }
        function Send_WorkForceMail(LoginID, WorkForceID, DocType) {
            ShowLoadingDialog();
            var src = EncryptJSON("-2*/WorkForce/Send_WorkForceMail*" + LoginID + "*" + WorkForceID + "*" + DocType);
            var PostURL = "/WorkForce/Send_WorkForceMail?src=" + src;
            $.ajax({
                url: PostURL,
                type: "Get",
                contentType: 'application/json',
                async: true,
                success: function (args) {
                    CloseLoadingDialog();
                    SuccessToaster(args.SuccessMessage);
                },
                error: function (er) {
                    console.log(er);
                }
            });
        }
</script>
</body>
</html>
