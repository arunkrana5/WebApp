@model TourPlan.Add


@using (Ajax.BeginForm("_AddTourPlan", "Transaction",
        new { src = ViewBag.src },
         new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnBegin = "ShowLoadingDialog()" },
            new { @id = "_AddTourPlanForm", @enctype = "multipart/form-data" })
    )
{
    @Html.HiddenFor(n => n.TourPlanID)
    if (Model.TourPlanID == 0)
    {
        <div class="row p-2">
            <div class="col-lg-3 form-group">
                <label>Region <sup>*</sup></label>
                <input type="hidden" id="hdnRegionID" value="@Model.RegionID" />
                @Html.DropDownListFor(n => n.RegionID, new SelectList(Model.RegionList, "ID", "Name", Model.RegionID), "Select Region",
            new { @class = "form-control applyselect", @onchange = "FillState()" })
                @Html.ValidationMessageFor(model => model.RegionID, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-3 form-group">
                <label>State <sup>*</sup></label>
                <input type="hidden" id="hdnStateID" value="@Model.StateID" />
                @Html.DropDownListFor(n => n.StateID, new SelectList(Model.StateList, "ID", "Name", Model.StateID), "Select State",
           new { @class = "form-control applyselect", @onchange = "FillCity()" })
                @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-3 form-group">
                <label>Branch <sup>*</sup></label>
                <input type="hidden" id="hdnBranchID" value="@Model.BranchID" />
                @Html.DropDownListFor(n => n.BranchID, new SelectList(Model.BranchList, "ID", "Name", Model.BranchID), "Select Branch",
             new { @class = "form-control applyselect", @onchange = "FillMaxEMPCount()" })
                @Html.ValidationMessageFor(model => model.BranchID, "", new { @class = "text-danger" })
                <div class="green-clr">
                    <span>Maximum Employee:-></span>
                    <span id="spnMaxEMP">@Model.MaxEMPCount</span>
                </div>
            </div>
            <div class="col-lg-3 form-group">
                <label>City <sup>*</sup></label>
                <input type="hidden" id="hdnCityID" value="@Model.CityID" />
                @Html.DropDownListFor(n => n.CityID, new SelectList(Model.CityList, "ID", "Name", Model.CityID), "Select City",
            new { @class = "form-control applyselect", @onchange = "FillArea()" })
                @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-6 form-group">
                <label>Area <sup>*</sup></label>
                <input type="hidden" id="hdnAreaID" value="@Model.AreaID" />
                @Html.DropDownListFor(n => n.AreaID, new SelectList(Model.AreaList, "ID", "Name", Model.AreaID), "Select Area",
           new { @class = "form-control applyselect", @onchange = "FillAreaBaseDD()" })
                @Html.ValidationMessageFor(model => model.AreaID, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-3 form-group">
                <label>Employee Code (Name) <sup>*</sup></label>
                <input type="hidden" id="hdnEMPID" value="@Model.EMPID" />
                @Html.DropDownListFor(n => n.EMPID, new SelectList(Model.EMPList, "ID", "Name", Model.EMPID), "Select EMP",
           new { @class = "form-control applyselect" })
                @Html.ValidationMessageFor(model => model.EMPID, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-3 form-group">
                <label>Dealer  Code (Name) <sup>*</sup></label>
                <input type="hidden" id="hdnDealerID" value="@Model.DealerID" />
                @Html.DropDownListFor(n => n.DealerID, new SelectList(Model.DealerList, "ID", "Name", Model.DealerID), "Select Dealer",
          new { @class = "form-control applyselect" })
                @Html.ValidationMessageFor(model => model.DealerID, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-12 form-group">
                <h6 class="">Period </h6>@*heading-dgn*@
                <div class="row">
                    <div class="col-lg-6 form-group">
                        <label>Start Date  <sup>*</sup></label>
                        @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control", @type = "Date" })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-6 form-group">
                        <label>End Date <sup>*</sup></label>
                        @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control", @type = "Date" })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
          


            <div class="col-lg-12 form-group text-right">

                <button type="submit" class="btn client-save btn-primary" name="Command" value="Add">Update</button>

            </div>
        </div>
    }
    else
    {
        <div class="row p-2">
            <div class="col-lg-4 form-group">
                <label>Region <sup>*</sup></label>
                <input type="hidden" id="hdnRegionID" value="@Model.RegionID" name="@Html.NameFor(x => x.RegionID)" />
                @Html.DropDownListFor(n => n.RegionID, new SelectList(Model.RegionList, "ID", "Name", Model.RegionID), "Select Region",
            new { @Disabled = "Disabled", @class = "form-control applyselect", @onchange = "FillState()" })
                @Html.ValidationMessageFor(model => model.RegionID, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-4 form-group">
                <label>State <sup>*</sup></label>
                <input type="hidden" id="hdnStateID" value="@Model.StateID" name="@Html.NameFor(x => x.StateID)" />
                @Html.DropDownListFor(n => n.StateID, new SelectList(Model.StateList, "ID", "Name", Model.StateID), "Select State",
           new { @Disabled = "Disabled", @class = "form-control applyselect", @onchange = "FillCity()" })
                @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-4 form-group">
                <label>Branch <sup>*</sup></label>
                <input type="hidden" id="hdnBranchID" value="@Model.BranchID" name="@Html.NameFor(x => x.BranchID)" />
                @Html.DropDownListFor(n => n.BranchID, new SelectList(Model.BranchList, "ID", "Name", Model.BranchID), "Select Branch",
             new { @Disabled = "Disabled", @class = "form-control applyselect", @onchange = "FillMaxEMPCount()" })
                @Html.ValidationMessageFor(model => model.BranchID, "", new { @class = "text-danger" })
                <div class="green-clr">
                    <span>Maximum Employee:-></span>
                    <span id="spnMaxEMP">@Model.MaxEMPCount</span>
                </div>
            </div>
            <div class="col-lg-4 form-group">
                <label>City <sup>*</sup></label>
                <input type="hidden" id="hdnCityID" value="@Model.CityID" name="@Html.NameFor(x => x.CityID)" />
                @Html.DropDownListFor(n => n.CityID, new SelectList(Model.CityList, "ID", "Name", Model.CityID), "Select City",
            new { @Disabled = "Disabled", @class = "form-control applyselect", @onchange = "FillArea()" })
                @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-8 form-group">
                <label>Area <sup>*</sup></label>
                <input type="hidden" id="hdnAreaID" value="@Model.AreaID" name="@Html.NameFor(x => x.AreaID)" />
                @Html.DropDownListFor(n => n.AreaID, new SelectList(Model.AreaList, "ID", "Name", Model.AreaID), "Select Area",
           new { @Disabled = "Disabled", @class = "form-control applyselect", @onchange = "FillAreaBaseDD()" })
                @Html.ValidationMessageFor(model => model.AreaID, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-6 form-group">
                <label>Employee Code (Name) <sup>*</sup></label>
                <input type="hidden" id="hdnEMPID" value="@Model.EMPID" name="@Html.NameFor(x => x.EMPID)" />
                @Html.DropDownListFor(n => n.EMPID, new SelectList(Model.EMPList, "ID", "Name", Model.EMPID), "Select EMP",
           new { @Disabled = "Disabled", @class = "form-control applyselect" })
                @Html.ValidationMessageFor(model => model.EMPID, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-6 form-group">
                <label>Dealer  Code (Name) <sup>*</sup></label>
                <input type="hidden" id="hdnDealerID" value="@Model.DealerID" name="@Html.NameFor(x => x.DealerID)" />
                @Html.DropDownListFor(n => n.DealerID, new SelectList(Model.DealerList, "ID", "Name", Model.DealerID), "Select Dealer",
          new { @Disabled = "Disabled", @class = "form-control applyselect" })
                @Html.ValidationMessageFor(model => model.DealerID, "", new { @class = "text-danger" })
            </div>

            <div class="col-lg-12 form-group">
                <h2 class="heading-dgn">Period </h2>
            </div>
            <div class="col-lg-6 form-group">
                <label>Start Date  <sup>*</sup></label>
                @if (Model.TourPlanID == 0)
                {
                    @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control", @type = "Date" })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control", @type = "Date", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                }
            </div>
            <div class="col-lg-6 form-group">
                <label>End Date <sup>*</sup></label>
                @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control", @type = "Date" })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
            <div class="col-lg-12 form-group">
                <button type="submit" class="btn btn-indigo" name="Command" value="Add"><i class="fa fa-paper-plane" aria-hidden="true"></i> Update</button>
            </div>
        </div>
    }
}
