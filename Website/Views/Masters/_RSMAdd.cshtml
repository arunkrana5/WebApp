@model UserHierarchy.Add


@using (Ajax.BeginForm("SaveUserHierarchy", "Masters",
        new { src = ClsCommon.Encrypt(ViewBag.MenuID + "*" + "/Masters/SaveUserHierarchy" + "*" + ViewBag.HierarchyID + "*" + ViewBag.Doctype) },
         new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnBegin = "ShowLoadingDialog()" },
            new { @id = "_HierarchyForm" })
    )
{

    @Html.HiddenFor(x => Model.HierarchyID)
    @Html.HiddenFor(x => Model.TableIDs)
    @Html.HiddenFor(x => Model.DealerType)

<div class="row p-2">
    <div class="col-lg-4 col-md-4 col-sm-12 form-group">
        <label>Region<sup>*</sup></label>
        <select id="ddTable" onchange="FillTableValues(this)" class="form-control applyselect" multiple="multiple">
            @if (Model.TableList != null)
            {
                foreach (var item in Model.TableList)
                {
                    if (!string.IsNullOrEmpty(Model.TableIDs))
                    {
                        <option @(("%" + Model.TableIDs.Replace(",", "%,%") + "%").Contains("%" + item.ID + "%") ? "selected" : "") value="@item.ID">@item.Name</option>
                    }
                    else
                    {
                        <option value="@item.ID">@item.Name</option>
                    }
                }
            }
        </select>
        @Html.ValidationMessageFor(model => model.TableIDs, "", new { @class = "text-danger" })
    </div>


    <div class="col-lg-4 col-md-4 col-sm-12 form-group">
        <label>Users<sup>*</sup></label>
        @Html.DropDownListFor(n => n.UserLoginID, new SelectList(Model.UserList, "ID", "Name", Model.UserLoginID), "Select User",
            new { @class = "form-control applyselect" })
        @Html.ValidationMessageFor(model => model.UserLoginID, "", new { @class = "text-danger" })
    </div>

    <div class="col-lg-4 col-md-4 col-sm-12 form-group">
        <label>Dealer Type </label>
        <select id="ddDealerType" onchange="FillDealerValues(this)" class="form-control applyselect" multiple="multiple">
            @if (Model.DealerTypeList != null)
            {
                foreach (var item in Model.DealerTypeList)
                {
                    if (!string.IsNullOrEmpty(Model.DealerType))
                    {
                        <option @(("%" + Model.DealerType.Replace(",", "%,%") + "%").Contains("%" + item.ID + "%") ? "selected" : "") value="@item.ID">@item.Name</option>
                    }
                    else
                    {
                        <option value="@item.ID">@item.Name</option>
                    }
                }
            }
        </select>
        @Html.ValidationMessageFor(model => model.DealerType, "", new { @class = "text-danger" })
    </div>
    <div class="col-lg-12 form-group text-right">

        @if (Model.HierarchyID > 0)
        {
            <button type="submit" class="btn client-save btn-primary" name="Command" value="Add"> Update</button>
        }
        else
        {
            <button type="submit" class="btn client-save btn-primary" name="Command" value="Add"> Submit</button>
        }
    </div>

</div>
}