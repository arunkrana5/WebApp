@model Banner.Add


@using (Ajax.BeginForm("_BannerAdd", "Masters",
        new { src = ViewBag.src },
         new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnBegin = "ShowLoadingDialog()" },
            new { @id = "_BannerAddAddForm", @enctype = "multipart/form-data" })
    )
{


    @Html.HiddenFor(x => Model.BannerID)
<div class="row p-2">
    <div class="col-lg-3 col-md-4 col-sm-12 form-group">
        <label>Doctype</label>
        @Html.DropDownListFor(n => n.Doctype, new SelectList(Model.DoctypeList, "Name", "Name", Model.Doctype), "Select Doctype",
            new { @class = "form-control applyselect" })
        @Html.ValidationMessageFor(model => model.Doctype, "", new { @class = "text-danger" })
    </div>
    <div class="col-lg-3 col-md-4 col-sm-12 form-group">
        <label>Roles</label>
        @Html.DropDownListFor(n => n.RoleIDs, new SelectList(Model.RoleList, "ID", "Name", Model.RoleIDs), "Select Role",
            new { @class = "form-control applyselect", @multiple = "multiple" })
        @Html.ValidationMessageFor(model => model.RoleIDs, "", new { @class = "text-danger" })
    </div>
    <div class="col-lg-3 col-md-4 col-sm-12  form-group">
        <label>Heading </label>
        @Html.TextBoxFor(model => model.Heading, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Heading, "", new { @class = "text-danger" })
    </div>
    <div class="col-lg-3 col-md-4 col-sm-12  form-group">
        <label>Sub Heading </label>
        @Html.TextBoxFor(model => model.SubHeading, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.SubHeading, "", new { @class = "text-danger" })
    </div>
    <div class="col-lg-3 col-md-4 col-sm-12  form-group">
        <label>Description </label>
        @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>
    <div class="col-lg-3 col-md-4 col-sm-12  form-group">
        <label>Priority</label>
        @Html.TextBoxFor(model => model.Priority, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
    </div>

    @*<div class="col-lg-3 col-md-4 col-sm-12  form-group">
            <label>IsActive<sup>*</sup></label>
            @Html.HiddenFor(model => model.IsActive)
            <div class="can-toggle">
                <input type="checkbox" id="IsActive" @(Model.IsActive ? "checked" : "") name="@Html.NameFor(x=>x.IsActive)">
                <label for="IsActive"></label>
            </div>
        </div>*@
    <div class="col-lg-3 col-md-4 col-sm-12 form-group">
        <label>Upload</label>
        @Html.TextBoxFor(x => x.Upload, new { @type = "file", @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Upload, "", new { @class = "text-danger" })
    </div>
    <div class="col-lg-12 col-md-12 col-sm-12  form-group">
        @if (!string.IsNullOrEmpty(Model.ImagePath))
        {
            <img src="@Model.ImagePath" class="img-responsive" height="100px" width="100px" />
        }
    </div>

    <div class="col-lg-12 form-group text-right">

        @if (Model.BannerID > 0)
        {
            <button type="submit" class="btn  client-save btn-primary" name="Command" value="Add"> Update</button>
        }
        else
        {

            <button type="submit" class="btn client-save btn-primary" name="Command" value="Add"> Submit</button>
        }
    </div>

</div>
}
