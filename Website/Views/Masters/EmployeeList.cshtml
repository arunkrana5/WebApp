@model MyTab.Approval
@section style{
    @System.Web.Optimization.Styles.Render("~/bundle/dataTablecss")
}
<div class="table-section">
    @Html.Partial("ListHeader_Partial", "Employee List")


    <div class="card">

        <div class="x_panel">
            <div class="card-body">

                <input type="hidden" id="hdnAddUrl" name="hdnAddUrl" value="@Url.Action("EmployeeAdd",new { src = ClsCommon.Encrypt(ViewBag.MenuID+"*"+"/Masters/EmployeeAdd*0") })" />
                <input type="hidden" id="hdnImportUrl" name="hdnImportUrl" value="@Url.Action("EMPImport",new { src = ClsCommon.Encrypt(ViewBag.MenuID+"*"+"/Masters/EMPImport*0") })" />
                <div class="">
                    <div class="tabmargin">
                        @Html.HiddenFor(x => x.Approved)
                        <ul id="tabs" class="nav nav-tabs " role="tablist">
                            <li class="nav-item"> <a tabvalue="0" class="nav-link ripplelink AnchorApproval @(Model.Approved == 0 ? "active" : "")" data-toggle="tab" role="tab"> Working</a> </li>
                            <li class="nav-item"> <a tabvalue="1" class="nav-link ripplelink AnchorApproval @(Model.Approved == 1 ? "active" : "") " data-toggle="tab" role="tab">Left</a></li>
                        </ul>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12 ">
                        <div class="table-responsive">
                            <table id="tblDataTable" class="table table-bordered table-hover text-nowrap key-buttons">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Action</th>
                                        <th>Documents</th>
                                        <th>Code</th>
                                        <th>Dealer Name</th>
                                        <th>Dealer Code</th>
                                        <th>DOL Status</th>
                                        <th>Phone</th>
                                        <th>Email ID</th>
                                        <th>Father Name</th>
                                        <th>DOB</th>
                                        <th>Gender</th>
                                        <th>Designation</th>
                                        <th>Department</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>


            </div>
        </div>
    </div>


</div>


<div class="modal fade pop-dgn" id="ViewModal">
    <div class="modal-dialog modal-md">
        <div class="modal-content">

            <div class="modal-header blk-gdn-btn">
                <h4 class="modal-title"><i class="fas fa-print"></i><span class="spnDocHead"></span> </h4>
                <div class="close" data-dismiss="modal">&times;</div>
            </div>
            <!-- Modal body -->
            <div class="modal-body">
                <div id="EMPDocTagetDiv"></div>
            </div>
        </div>
    </div>

</div>

@section scripts    {
    @System.Web.Optimization.Scripts.Render("~/bundle/dataTablesjs")

    @System.Web.Optimization.Scripts.Render("~/bundle/unobtrusivejs")

    <script>
    $(document).ready(function () {
        BindDataTable();
    });

        $('.AnchorApproval').on('click', function (e) {

            e.preventDefault();
            e.stopPropagation();
            var att = $(this).attr("tabvalue");
            $(".AnchorApproval.active").removeClass("active");
            $(this).addClass("active");
            $("#Approved").val(att);
            BindDataTable();
        });

    function ListHeaderExport()
    {
            var url = "/Export/Employee_Export";
            var src = EncryptJSON(@ViewBag.MenuID+"*" + "/Export/Employee_Export")
            window.location.href = url + "?src=" + src;
    }



        function BindDataTable() {
             var Approved =$("#Approved").val();
            var src = EncryptJSON(@ViewBag.MenuID+"*/Masters/_EmployeeList*" + Approved)
            $('#tblDataTable').DataTable({
            "destroy": true,
            "processing": true,
            "serverSide": true,

            "ajax": {
                url: "/Masters/_EmployeeList?src=" + src,
                type: "post",
                data: { "Approved": Approved }
            },
                "columns": [
                    { "data": "EMPName" },
                     {
                    className: 'EMPID',
                         data: 'EMPID',
                    render: function (data, type,row) {

                        if (type === 'display') {
                            let IsActiveHTML = `${(row.IsActive ? "<a  data-toggle='tooltip' data-original-title='Click to DeActivate' list='EMP_IsActive' OP='0' class='IsActive_Confirm' onclick='ActivateIsActiveClick()' > <i class='fa fa-circle-check' aria-hidden='true'></i></a>" : "<a data-toggle='tooltip' data-original-title='Click to Activate' list='EMP_IsActive' OP='1'  class='IsActive_Confirm' onclick='ActivateIsActiveClick()' > <i class='fa fa-circle-xmark' aria-hidden='true'></i></a>")}`
                            let edit = EncryptJSON(@ViewBag.MenuID+"*/Masters/EmployeeAdd*" + row.EMPID);
                            let HTML = `<input type='hidden' name='I' value="${row.EMPID}" /><input type='hidden' name='N' value="${row.EMPCode}" />`
                            HTML += `${IsActiveHTML}  <a title="Edit" href="/Masters/EmployeeAdd?src=${edit}" data-toggle="tooltip"><i class="fa-solid fa-pen-to-square" aria-hidden="true"></i> </a>`;
                            HTML += `  <a title="Show Details" OP="Employee" onclick="ShowMasterDetails(this)" data-toggle="tooltip"><i class="fa-solid fa-eye" aria-hidden="true"></i> </a>`;
                            return HTML
                        }
                        return data;
                    }
                    },
                     {
                    className: 'EMPID',
                         data: 'EMPID',
                    render: function (data, type,row) {
                        if (type === 'display') {
                            let HTML = `<a  onclick='ShowEMPDocuments(this)' ><i class='fa fa-upload' aria-hidden='true'></i></a>`;
                            return HTML
                        }
                        return data;
                    }
                },
                    { "data": "EMPCode" },
                    { "data": "DealerName" },
                    { "data": "DealerCode" },
                    {
                        render: function (data, type, row) {
                            let HTML;
                            if (row.DOLStatus == "Working") {
                                HTML = `<span class='grnclr'>${row.DOLStatus}</span>`;
                                return HTML
                            }
                            else {
                                HTML = `<span class='redclr'>${row.DOLStatus}</span>`;
                                return HTML
                            }

                        }
                    },

                { "data": "Phone" },
                { "data": "EmailID" },
                { "data": "FatherName" },
                    { "data": "DOB" },
                    { "data": "Gender" },
                    { "data": "DesignName" },
                { "data": "DeptName" },
            ]
        });
        }



        function AddDOL(obj) {
            ShowLoadingDialog();
            var EMPID = $(obj).closest("tr").find("input:hidden[name=I]").val();
            var Code = $(obj).closest("tr").find("input:hidden[name=N]").val();
            $(".spnHead").html(Code);
            $("input:hidden[name=hdnEMPID]").val(EMPID);
            $('#DOLModal').modal({
                backdrop: 'static',
                keyboard: false
            })

            CloseLoadingDialog();

        }

        function OnDOLSuccess(obj) {
            CloseLoadingDialog();
            if (obj.Status) {
                SuccessToaster(obj.SuccessMessage);
                $("#DOLModal").modal('hide');
                $("input:hidden[name=hdnEMPID]").val('');
                $("input:hidden[name=Reason]").val('');
                $("input:hidden[name=DOLDate]").val('');
                BindDataTable();
            }
            else {

                FailToaster(obj.SuccessMessage);

            }
        }

    function ShowEMPDocuments(obj) {
            var EMPID = $(obj).closest("tr").find("input:hidden[name=I]").val();
            var Code = $(obj).closest("tr").find("input:hidden[name=N]").val();
            $(".spnDocHead").html(Code);
			$.ajax({
                url: "/Masters/_EmployeeDocuments",
                type: "Get",
                data: { src: EncryptJSON(@ViewBag.MenuID+"*" + "/Masters/_EmployeeDocuments*" + EMPID + "*" + Code) },
                success: function (data)
                {
                    $("#EMPDocTagetDiv").empty();
                    $("#EMPDocTagetDiv").html(data);
                    $('#ViewModal').modal({
                        backdrop: 'static',
                        keyboard: false
                    });
				},
				error: function (er) {
					alert(er);
				}
			});
            }

    function AddNewRow() {
        var LastTRCount = parseInt($('#tableEMPDoc').find("tbody tr").length) - 1;
        var $tableBody = $('#tableEMPDoc').find("tbody"),
            $trLast = $tableBody.find("tr:last"),
            $trNew = $trLast.clone();
        $trNew.find("td:last").html('<a onclick="DeleteRow(this)" class="remove" data-toggle="tooltip" data-original-title="Remove"><i class="fa fa-window-close red-clr" aria-hidden="true"></i></a>');


        $trNew.find("label").each(function () {
            $(this).attr({
                'id': function (_, id) { var arr = id.split('_'); return id.replace(arr[1], LastTRCount + 1); },
            });
            $(this).html(parseInt($('#tableEMPDoc').find("tbody tr").length) + 1);
        });

        $trNew.find("input").each(function (i) {
            $(this).attr({
                'id': function (_, name) { return name.replace('_' + LastTRCount + '_', '_' + (parseInt(LastTRCount) + 1) + '_'); },
                'name': function (_, name) { return name.replace('[' + LastTRCount + ']', '[' + (parseInt(LastTRCount) + 1) + ']'); },
            });
            $(this).val('')

        });
        $trNew.find("textarea").each(function (i) {
            $(this).attr({
                'id': function (_, name) { return name.replace('_' + LastTRCount + '_', '_' + (parseInt(LastTRCount) + 1) + '_'); },
                'name': function (_, name) { return name.replace('[' + LastTRCount + ']', '[' + (parseInt(LastTRCount) + 1) + ']'); },
            });
            $(this).val('')
        });
        $trNew.find("a.shfile").each(function (i) {
            $(this).val('')
            $(this).html('')
        });

        $trNew.find("select").each(function (i) {
            $(this).attr({
                'id': function (_, name) { return name.replace('_' + LastTRCount + '_', '_' + (parseInt(LastTRCount) + 1) + '_'); },
                'name': function (_, name) { return name.replace('[' + LastTRCount + ']', '[' + (parseInt(LastTRCount) + 1) + ']'); },
            });
            $(this).val('');
        });

        $trNew.find("span").each(function (i) {
            if ($(this).attr("data-valmsg-for")) {
                $(this).attr({
                    'data-valmsg-for': function (_, name) { return name.replace('[' + LastTRCount + ']', '[' + (parseInt(LastTRCount) + 1) + ']'); }
                });
            }
            if ($(this).attr("for")) {
                $(this).attr({
                    'for': function (_, name) { return name.replace('_' + LastTRCount + '_', '_' + (parseInt(LastTRCount) + 1) + '_'); }
                });
            }
        });

        $trLast.after($trNew);
        var form = $("#_EmployeeDocumentsForm").closest("form");
        form.removeData('validator');
        form.removeData('unobtrusiveValidation');
        $.validator.unobtrusive.parse(form);
    }

    function DeleteRow(obj) {
        var count = 0;
        var TotalRowCount = $('#tableEMPDoc').find("tbody tr").length;
        ConfirmMsgBox("Are you sure want to delete", '', function () {

            $(obj).closest('tr').remove();
            $("#tableEMPDoc TBODY TR").each(function (i) {
                $(this).closest("tr").find("label").each(function () {
                    $(this).attr({
                        'id': function (_, id) { var arr = id.split('_'); return id.replace(arr[1], i); },
                    });
                    $(this).html(i + 1)
                });


                $(this).closest("tr").find("input").each(function () {
                    $(this).attr({
                        'id': function (_, id) { return id.replace('_' + (parseInt(i) + 1) + '_', '_' + i + '_'); },
                        'name': function (_, name) { return name.replace('[' + (parseInt(i) + 1) + ']', '[' + i + ']'); },
                    });

                });

                $(this).closest("tr").find("textarea").each(function () {
                    $(this).attr({
                        'id': function (_, id) { return id.replace('_' + (parseInt(i) + 1) + '_', '_' + i + '_'); },
                        'name': function (_, name) { return name.replace('[' + (parseInt(i) + 1) + ']', '[' + i + ']'); },
                    });

                });
                $(this).closest("tr").find("select").each(function () {
                    $(this).attr({
                        'id': function (_, id) { return id.replace('_' + (parseInt(i) + 1) + '_', '_' + i + '_'); },
                        'name': function (_, name) { return name.replace('[' + (parseInt(i) + 1) + ']', '[' + i + ']'); },
                    });

                });



                $(this).closest("tr").find("span").each(function () {
                    if ($(this).attr("data-valmsg-for")) {
                        $(this).attr({
                            'data-valmsg-for': function (_, name) { return name.replace('[' + (parseInt(i) + 1) + ']', '[' + i + ']'); },
                        });
                    }
                    if ($(this).attr("for")) {
                        $(this).attr({
                            'for': function (_, id) { return id.replace('_' + (parseInt(i) + 1) + '_', '_' + i + '_'); },
                        });
                    }
                });
            });
            var form = $("#_EmployeeDocumentsForm").closest("form");
            form.removeData('validator');
            form.removeData('unobtrusiveValidation');
            $.validator.unobtrusive.parse(form);

        })
    }

    function OnDocSuccess(obj) {
        if (obj.Status) {
            SuccessToaster(obj.SuccessMessage);
            $('#ViewModal').modal('hide')
            CloseLoadingDialog();
        }
        else {
            CloseLoadingDialog();
            FailToaster(obj.SuccessMessage);

        }
    }

    </script>
}

