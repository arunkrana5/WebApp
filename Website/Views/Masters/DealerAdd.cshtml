@model Dealer.Add


@section style{


}
<div class="table-section">
    <div class="page-header">
        <div class="page-leftheader px-2 my-2">
            <h4 class="page-title pt-4">Dealer Master</h4>
        </div>

    </div>
    @using (Ajax.BeginForm("DealerAdd", "Masters",
            new { src = ViewBag.src },
             new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnBegin = "ShowLoadingDialog()" },
                new { @id = "DealerAddForm", @enctype = "multipart/form-data" })
        )
    {
        <div class="row p-2">
            <div class="col-lg-12 ">
                <div class="card">
                    <div class="card-body">

                        <div class="row ">

                            <div class="col-lg-2 form-group">
                                <label>  Dealer Code <sup>*</sup>  </label>
                                @Html.TextBoxFor(model => model.DealerCode, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DealerCode, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-3 form-group">
                                <label> Dealer Name  <sup>*</sup> </label>
                                @Html.TextBoxFor(model => model.DealerName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DealerName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-2 form-group">
                                <label> Dealer Type <sup>*</sup> </label>
                                @Html.DropDownListFor(n => n.DealerTypeID, new SelectList(Model.DealerTypeList, "ID", "Name", Model.DealerCategoryID), "Select",
                                 new { @class = "form-control mb-0  applyselect" })
                                @Html.ValidationMessageFor(model => model.DealerTypeID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-2 form-group">
                                <label> Dealer Category <sup>*</sup> </label>
                                @Html.DropDownListFor(n => n.DealerCategoryID, new SelectList(Model.DealerCategoryList, "ID", "Name", Model.DealerCategoryID), "Select",
                                 new { @class = "form-control mb-0  applyselect" })
                                @Html.ValidationMessageFor(model => model.DealerCategoryID, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-2 form-group">
                                <label> Region  <sup>*</sup>  </label>
                                <input type="hidden" id="hdnRegionID" value="@Model.RegionID" />
                                @Html.DropDownListFor(n => n.RegionID, new SelectList(Model.RegionList, "ID", "Name", Model.RegionID), "Select",
                                new { @class = "form-control  applyselect", @onchange = "FillState()" })
                                @Html.ValidationMessageFor(model => model.RegionID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-2 form-group">
                                <label> State  <sup>*</sup> </label>
                                <input type="hidden" id="hdnStateID" value="@Model.StateID" />
                                @Html.DropDownListFor(n => n.StateID, new SelectList(Model.StateList, "ID", "Name", Model.StateID), "Select",
                         new { @class = "form-control mb-0  applyselect", @onchange = "FillCity()" })
                                @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
                            </div>


                            <div class="col-lg-2 form-group">
                                <label> Branch  <sup>*</sup> </label>
                                <input type="hidden" id="hdnBranchID" value="@Model.BranchID" />
                                @Html.DropDownListFor(n => n.BranchID, new SelectList(Model.BranchList, "ID", "Name", Model.BranchID), "Select",
                    new { @class = "form-control mb-0  applyselect" })
                                @Html.ValidationMessageFor(model => model.BranchID, "", new { @class = "text-danger" })
                            </div>


                            <div class="col-lg-2 form-group">
                                <label>  City <sup>*</sup>  </label>
                                <input type="hidden" id="hdnCityID" value="@Model.CityID" />
                                @Html.DropDownListFor(n => n.CityID, new SelectList(Model.CityList, "ID", "Name", Model.CityID), "Select",
                new { @class = "form-control mb-0  applyselect", @onchange = "FillArea()" })
                                @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-3 form-group">
                                <label>   Area <sup>*</sup>  </label>
                                <input type="hidden" id="hdnAreaID" value="@Model.AreaID" />
                                @Html.DropDownListFor(n => n.AreaID, new SelectList(Model.AreaList, "ID", "Name", Model.AreaID), "Select",
            new { @class = "form-control mb-0  applyselect" })
                                @Html.ValidationMessageFor(model => model.AreaID, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-lg-2 form-group">
                                <label>  Pincode <sup>*</sup> </label>
                                @Html.TextBoxFor(model => model.PinCode, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PinCode, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-2 form-group">
                                <label>  Email  </label>
                                @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-2 form-group">
                                <label>    Phone </label>
                                @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>




                            <div class="col-lg-2 form-group">
                                <label>
                                    Latitude<sup>*</sup>
                                </label>
                                @Html.TextBoxFor(model => model.Latitude, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-2 form-group">
                                <label>
                                    Longitude <sup>*</sup>
                                </label>
                                @Html.TextBoxFor(model => model.Longitude, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                            </div>


                            <div class="col-lg-2 form-group">
                                <label>
                                    Billing Code    <sup>*</sup>
                                </label>
                                @Html.TextBoxFor(model => model.BillingCode, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.BillingCode, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-2 form-group">
                                <label>
                                    Billing Name <sup>*</sup>
                                </label>
                                @Html.TextBoxFor(model => model.BillingName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.BillingName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 form-group">
                                <label> Address <sup>*</sup>   </label>
                                @Html.TextAreaFor(model => model.Address, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-lg-2 form-group">
                                <label>
                                    Route Number    <sup>*</sup>
                                </label>
                                @Html.TextBoxFor(model => model.RouteNumber, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RouteNumber, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-lg-2 form-group">
                                <label>
                                    Visit Type <sup>*</sup>
                                </label>
                                @Html.DropDownListFor(n => n.VisitType, new SelectList(Model.VisitTypeList, "Name", "Name", Model.VisitType), "Select",
new { @class = "form-control mb-0  applyselect" })
                                @Html.ValidationMessageFor(model => model.VisitType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3 form-group">
                                <label>   NSM<sup>*</sup>  </label>
                                @Html.HiddenFor(x => Model.NSM)
                                <select onchange="FillNSM(this)" class="form-control applyselect" multiple="multiple">
                                    @if (Model.NSMList != null)
                                    {
                                        foreach (var item in Model.NSMList)
                                        {
                                            if (!string.IsNullOrEmpty(Model.NSM))
                                            {
                                                <option @(("%" + Model.NSM.Replace(",", "%,%") + "%").Contains("%" + item.ID + "%") ? "selected" : "") value="@item.ID">@item.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@item.ID">@item.Name</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => model.NSM, "", new { @class = "text-danger" })

                            </div>
                            <div class="col-lg-3 form-group">
                                <label>   RSM   </label>
                                @Html.HiddenFor(x => Model.RSM)
                                <select onchange="FillRSM(this)" class="form-control applyselect" multiple="multiple">
                                    @if (Model.RSMList != null)
                                    {
                                        foreach (var item in Model.RSMList)
                                        {
                                            if (!string.IsNullOrEmpty(Model.RSM))
                                            {
                                                <option @(("%" + Model.RSM.Replace(",", "%,%") + "%").Contains("%" + item.ID + "%") ? "selected" : "") value="@item.ID">@item.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@item.ID">@item.Name</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => model.RSM, "", new { @class = "text-danger" })

                            </div>
                            <div class="col-lg-3 form-group">
                                <label>   BSM   </label>
                                @Html.HiddenFor(x => Model.BSM)
                                <select onchange="FillBSM(this)" class="form-control applyselect" multiple="multiple">
                                    @if (Model.BSMList != null)
                                    {
                                        foreach (var item in Model.BSMList)
                                        {
                                            if (!string.IsNullOrEmpty(Model.BSM))
                                            {
                                                <option @(("%" + Model.BSM.Replace(",", "%,%") + "%").Contains("%" + item.ID + "%") ? "selected" : "") value="@item.ID">@item.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@item.ID">@item.Name</option>
                                            }
                                        }
                                    }
                                </select>

                                @Html.ValidationMessageFor(model => model.BSM, "", new { @class = "text-danger" })

                            </div>
                            <div class="col-lg-3 form-group">
                                <label>   ASM   </label>
                                @Html.HiddenFor(x => Model.ASM)
                                <select onchange="FillASM(this)" class="form-control applyselect" multiple="multiple">
                                    @if (Model.ASMList != null)
                                    {
                                        foreach (var item in Model.ASMList)
                                        {
                                            if (!string.IsNullOrEmpty(Model.ASM))
                                            {
                                                <option @(("%" + Model.ASM.Replace(",", "%,%") + "%").Contains("%" + item.ID + "%") ? "selected" : "") value="@item.ID">@item.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@item.ID">@item.Name</option>
                                            }
                                        }
                                    }
                                </select>
                                @*@Html.ListBoxFor(model => model.ASMIDs, new SelectList(Model.ASMList, "ID", "Name", Model.ASMIDs), new { @class = "form-control select2", multiple = "1" })*@
                                @Html.ValidationMessageFor(model => model.ASM, "", new { @class = "text-danger" })

                            </div>
                            <div class="col-lg-3 form-group">
                                <label>   TL   </label>
                                @Html.HiddenFor(x => Model.TL)
                                <select onchange="FillTL(this)" class="form-control applyselect" multiple="multiple">
                                    @if (Model.TLList != null)
                                    {
                                        foreach (var item in Model.TLList)
                                        {
                                            if (!string.IsNullOrEmpty(Model.TL))
                                            {
                                                <option @(("%" + Model.TL.Replace(",", "%,%") + "%").Contains("%" + item.ID + "%") ? "selected" : "") value="@item.ID">@item.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@item.ID">@item.Name</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => model.TL, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-lg-3 form-group">
                                <label>   RMM   </label>
                                @Html.HiddenFor(x => Model.RMM)
                                <select onchange="FillRMM(this)" class="form-control applyselect" multiple="multiple">
                                    @if (Model.RMMList != null)
                                    {
                                        foreach (var item in Model.RMMList)
                                        {
                                            if (!string.IsNullOrEmpty(Model.RMM))
                                            {
                                                <option @(("%" + Model.RMM.Replace(",", "%,%") + "%").Contains("%" + item.ID + "%") ? "selected" : "") value="@item.ID">@item.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@item.ID">@item.Name</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => model.RMM, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-lg-3 form-group">
                                <label>   BMM   </label>
                                @Html.HiddenFor(x => Model.BMM)
                                <select onchange="FillBMM(this)" class="form-control applyselect" multiple="multiple">
                                    @if (Model.BMMList != null)
                                    {
                                        foreach (var item in Model.BMMList)
                                        {
                                            if (!string.IsNullOrEmpty(Model.BMM))
                                            {
                                                <option @(("%" + Model.BMM.Replace(",", "%,%") + "%").Contains("%" + item.ID + "%") ? "selected" : "") value="@item.ID">@item.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@item.ID">@item.Name</option>
                                            }
                                        }
                                    }
                                </select>

                                @Html.ValidationMessageFor(model => model.BMM, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-lg-3 form-group">
                                <label>   Inhouse   </label>
                                @Html.HiddenFor(x => Model.Inhouse)
                                <select onchange="FillInhouse(this)" class="form-control applyselect" multiple="multiple">
                                    @if (Model.InhouseList != null)
                                    {
                                        foreach (var item in Model.InhouseList)
                                        {
                                            if (!string.IsNullOrEmpty(Model.Inhouse))
                                            {
                                                <option @(("%" + Model.Inhouse.Replace(",", "%,%") + "%").Contains("%" + item.ID + "%") ? "selected" : "") value="@item.ID">@item.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@item.ID">@item.Name</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => model.Inhouse, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-lg-3 form-group">
                                <label>   Others   </label>
                                @Html.HiddenFor(x => Model.Others)
                                <select onchange="FillOthers(this)" class="form-control applyselect" multiple="multiple">
                                    @if (Model.OtherList != null)
                                    {
                                        foreach (var item in Model.OtherList)
                                        {
                                            if (!string.IsNullOrEmpty(Model.Others))
                                            {
                                                <option @(("%" + Model.Others.Replace(",", "%,%") + "%").Contains("%" + item.ID + "%") ? "selected" : "") value="@item.ID">@item.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@item.ID">@item.Name</option>
                                            }
                                        }
                                    }
                                </select>
                                @Html.ValidationMessageFor(model => model.Inhouse, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-12">

                                <div>

                                    <button name="Command" value="Add" class="btn btnupdate pull-right" type="submit">Save changes</button>
                                    <a href="@Url.Action("DealerList",new { src = ClsCommon.Encrypt(ViewBag.MenuID+"*"+"/Masters/DealerList") })" type="button" class="btn  btndefault pull-right">Cancel</a>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>

    }
</div>
@section scripts    {
    @System.Web.Optimization.Scripts.Render("~/bundle/unobtrusivejs")
    <script>

        function FillState() {
            var ID = $("#RegionID").find("option:selected").val();
            if (ID != '') {
                var data = GetDropDownList(ID, "State");
                if (data != '') {
                    $("#StateID").empty();
                    $("#StateID").append($("<option />").val("").text("Select"));

                    //$("#BranchID").empty();
                    //$("#BranchID").append($("<option />").val("").text("Select"));

                    $("#CityID").empty();
                    $("#CityID").append($("<option />").val("").text("Select"));

                    $("#AreaID").empty();
                    $("#AreaID").append($("<option />").val("").text("Select"));

                    $(data).each(function () {
                        $("#StateID").append($("<option />").val(this.ID).text(this.Name));
                        $("#StateID").select2();

                    });
                    if ($("#hdnStateID").val() != 0) {
                        $("#StateID").val($("#hdnStateID").val()).change();
                    }
                    CloseLoadingDialog();
                } else {
                    $("#StateID").empty();
                    $("#StateID").append($("<option />").val("").text("Select"));
                    //$("#BranchID").empty();
                    //$("#BranchID").append($("<option />").val("").text("Select"));

                    $("#CityID").empty();
                    $("#CityID").append($("<option />").val("").text("Select"));

                    $("#AreaID").empty();
                    $("#AreaID").append($("<option />").val("").text("Select"));
                }
            }
            else {
                $("#StateID").empty();
                $("#StateID").append($("<option />").val("").text("Select"));

                //$("#BranchID").empty();
                //$("#BranchID").append($("<option />").val("").text("Select"));

                $("#CityID").empty();
                $("#CityID").append($("<option />").val("").text("Select"));

                $("#AreaID").empty();
                $("#AreaID").append($("<option />").val("").text("Select"));
            }
        }



        function FillCity() {
            var ID = $("#StateID").find("option:selected").val();
            if (ID != '') {
                var data = GetDropDownList(ID, "City");
                if (data != '') {
                    $("#CityID").empty();
                    $("#CityID").append($("<option />").val("").text("Select"));
                    $("#AreaID").empty();
                    $("#AreaID").append($("<option />").val("").text("Select"));
                    $(data).each(function () {
                        $("#CityID").append($("<option />").val(this.ID).text(this.Name));
                        $("#CityID").select2();
                    });
                    if ($("#hdnCityID").val() != 0) {
                        $("#CityID").val($("#hdnCityID").val()).change();
                    }
                    CloseLoadingDialog();
                } else {
                    $("#CityID").empty();
                    $("#CityID").append($("<option />").val("").text("Select"));
                    $("#AreaID").empty();
                    $("#AreaID").append($("<option />").val("").text("Select"));
                }
            }
            else {
                $("#CityID").empty();
                $("#CityID").append($("<option />").val("").text("Select"));
                $("#AreaID").empty();
                $("#AreaID").append($("<option />").val("").text("Select"));
            }




        }



        function FillArea() {
            var ID = $("#CityID").find("option:selected").val();
            if (ID != '') {
                var data = GetDropDownList(ID, "Area");
                if (data != '') {
                    $("#AreaID").empty();
                    $("#AreaID").append($("<option />").val("").text("Select"));
                    $(data).each(function () {
                        $("#AreaID").append($("<option />").val(this.ID).text(this.Name));
                        $("#AreaID").select2();

                    });
                    if ($("#hdnAreaID").val() != 0) {
                        $("#AreaID").val($("#hdnAreaID").val()).change();
                    }
                    CloseLoadingDialog();
                } else {
                    $("#AreaID").empty();
                    $("#AreaID").append($("<option />").val("").text("Select"));


                }
            } else {
                $("#AreaID").empty();
                $("#AreaID").append($("<option />").val("").text("Select"));


            }

        }

        //function FillBranch() {
        //    var ID = $("#StateID").find("option:selected").val();
        //    if (ID != '') {
        //        var data = GetDropDownList(ID, "Branch");
        //        if (data != '') {
        //            $("#BranchID").empty();
        //            $("#BranchID").append($("<option />").val("").text("Select"));
        //            $(data).each(function () {
        //                $("#BranchID").append($("<option />").val(this.ID).text(this.Name));
        //                $("#BranchID").select2();

        //            });
        //            if ($("#hdnBranchID").val() != 0) {
        //                $("#BranchID").val($("#hdnBranchID").val()).change();
        //            }
        //            CloseLoadingDialog();
        //        } else {
        //            $("#BranchID").empty();
        //            $("#BranchID").append($("<option />").val("").text("Select"));


        //        }
        //    } else {
        //        $("#BranchID").empty();
        //        $("#BranchID").append($("<option />").val("").text("Select"));


        //    }
        //    FillCity();
        //}


        function OnSuccess(obj) {
            if (obj.Status) {
                SuccessToaster(obj.SuccessMessage);
                window.location.href = obj.RedirectURL;
            }
            else {
                CloseLoadingDialog();
                FailToaster(obj.SuccessMessage);

            }
        }

        function FillNSM(obj) {
            var Val = $(obj).find('option:selected')
                .toArray().map(item => item.value).join();
            $("#NSM").val(Val);
        }

        function FillBSM(obj) {
            var Val = $(obj).find('option:selected')
                .toArray().map(item => item.value).join();
            $("#BSM").val(Val);
        }
        function FillRSM(obj) {
            var Val = $(obj).find('option:selected')
                .toArray().map(item => item.value).join();
            $("#RSM").val(Val);
        }
        function FillASM(obj) {
            var Val = $(obj).find('option:selected')
                .toArray().map(item => item.value).join();
            $("#ASM").val(Val);
        }
        function FillTL(obj) {
            var Val = $(obj).find('option:selected')
                .toArray().map(item => item.value).join();
            $("#TL").val(Val);
        }
        function FillRMM(obj) {
            var Val = $(obj).find('option:selected')
                .toArray().map(item => item.value).join();
            $("#RMM").val(Val);
        }
        function FillBMM(obj) {
            var Val = $(obj).find('option:selected')
                .toArray().map(item => item.value).join();
            $("#BMM").val(Val);
        }
        function FillInhouse(obj) {
            var Val = $(obj).find('option:selected')
                .toArray().map(item => item.value).join();
            $("#Inhouse").val(Val);
        }
        function FillOthers(obj) {
            var Val = $(obj).find('option:selected')
                .toArray().map(item => item.value).join();
            $("#Others").val(Val);
        }
    </script>
}