@model Employee.Add
@section style{
    @System.Web.Optimization.Styles.Render("~/bundle/dataTablecss")

    @Html.IncludeVersionedCss(Url.Content("../assets/design/plugins/fileupload/css/fileupload.css"))

}

<div class="page-header">
    <div class="page-leftheader">
        <h4 class="page-title ml-1 mb-2">Employee Master</h4>
    </div>

</div>
@using (Ajax.BeginForm("EmployeeAdd", "Masters",
        new { src = ViewBag.src },
         new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnBegin = "ShowLoadingDialog()" },
            new { @id = "EmployeeAddForm", @enctype = "multipart/form-data" })
    )
{

    <div class="row p-2 emp-mast m-1">
        <div class="col-xl-3 col-lg-4 col-md-6 col-sm-12">
            <div class="card p-4">
                <h3 class="card-title">Photo Upload </h3>
                @Html.TextBoxFor(x => x.Upload, new { @class = "dropify", @type = "file" })
            </div>
        </div>
        <div class="col-xl-9 col-lg-8 col-md-6 col-sm-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Employee Detail </h3>
                </div>
                <div class="card-body pb-2">
                    <div class="row ">
                        <div class="col-md-12  col-sm-12 col-xl-12">
                            <div class="row">

                                <div class="col-lg-3 form-group">
                                    <label>Employee Code<sup>*</sup></label>
                                    @Html.TextBoxFor(model => model.EMPCode, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EMPCode, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-lg-3 form-group">
                                    <label>Employee Name <sup>*</sup></label>
                                    @Html.TextBoxFor(model => model.EMPName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EMPName, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-3 form-group">
                                    <label>User ID<sup>*</sup></label>
                                    @Html.TextBoxFor(model => model.UserID, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-lg-3 form-group">
                                    <label>Password<sup>*</sup></label>
                                    @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @type = "password" })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-3 form-group">
                                    <label>Role <sup>*</sup></label>
                                    @Html.DropDownListFor(n => n.RoleID, new SelectList(Model.RoleList, "ID", "Name", Model.RoleID), "Select",
                          new { @class = "form-control  applyselect" })
                                    @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-lg-3 form-group">
                                    <label>Dealer <sup>*</sup></label>
                                    @Html.DropDownListFor(n => n.DealerID, new SelectList(Model.DealerList, "ID", "Name", Model.DealerID), "Select",
                          new { @class = "form-control  applyselect" })
                                    @Html.ValidationMessageFor(model => model.DealerID, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-lg-3 form-group">
                                    <label>Father Name<sup>*</sup></label>
                                    @Html.TextBoxFor(model => model.FatherName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-3 form-group">
                                    <label>Date of Birth <sup>*</sup></label>
                                    @Html.TextBoxFor(model => model.DOB, new { @class = "form-control", @type = "date" })
                                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-lg-3 form-group">
                                    <label>Gender</label>
                                    @Html.EnumDropDownListFor(m => m.Gender, "Select", new { @class = "form-control applyselect" })
                                    @Html.ValidationMessageFor(m => m.Gender)
                                </div>
                                <div class="col-lg-3 form-group">
                                    <label>Designation <sup>*</sup></label>
                                    @Html.DropDownListFor(n => n.DesignID, new SelectList(Model.DesignationList, "ID", "Name", Model.DesignID), "Select",
                            new { @class = "form-control  applyselect" })
                                    @Html.ValidationMessageFor(model => model.DesignID, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-lg-3 form-group">
                                    <label>Department<sup>*</sup></label>
                                    @Html.DropDownListFor(n => n.DepartID, new SelectList(Model.DepartmentList, "ID", "Name", Model.DepartID), "Select",
                            new { @class = "form-control  applyselect" })
                                    @Html.ValidationMessageFor(model => model.DepartID, "", new { @class = "text-danger" })
                                </div>


                                <div class="col-lg-3 form-group">
                                    <label>Date of Joining <sup>*</sup></label>
                                    @Html.TextBoxFor(model => model.DOJ, new { @class = "form-control", @type = "date" })
                                    @Html.ValidationMessageFor(model => model.DOJ, "", new { @class = "text-danger" })
                                </div>



                                <div class="col-lg-3 form-group">
                                    <label>PAN <sup>*</sup></label>
                                    @Html.TextBoxFor(model => model.PAN, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PAN, "", new { @class = "text-danger" })
                                </div>


                                <div class="col-lg-3 form-group">
                                    <label>Email ID <sup>*</sup></label>
                                    @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-3 form-group">
                                    <label>Phone <sup>*</sup></label>
                                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-3 form-group">
                                    <label>UAN</label>
                                    @Html.TextBoxFor(model => model.UAN, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.UAN, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-lg-3 form-group">
                                    <label>ESIC No</label>
                                    @Html.TextBoxFor(model => model.ESIC, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ESIC, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-3 form-group">
                                    <label>PJP Auto Assign  <sup>*</sup></label>
                                    @Html.HiddenFor(model => model.IsPJPAutoAssign)
                                    <div class="can-toggle">
                                        <input type="checkbox" onclick="fnIsPJPAutoAssign();" id="chk_IsPJPAutoAssign" @(Model.IsPJPAutoAssign ? "checked" : "")>
                                        <label for="chk_IsPJPAutoAssign"></label>
                                    </div>
                                </div>
                            </div>
                        </div>


                    </div>

                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h3 class="card-title"> Address </h3>
                </div>
                <div class="card-body pb-2">
                    <div class="row ">
                        <div class="col-md-12 col-xl-12 col-sm-12">
                            <div class="row">
                                <div class="col-lg-4 form-group">
                                    <label>Country <sup>*</sup></label>
                                    @Html.DropDownListFor(n => n.CountryID, new SelectList(Model.CountryList, "ID", "Name", Model.CountryID), "Select",
                             new { @class = "form-control  applyselect", @onchange = "FillRegion(this)" })
                                    @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-4 form-group">
                                    <label>Region <sup>*</sup></label>
                                    <input type="hidden" id="hdnRegionID" value="@Model.RegionID" />
                                    @Html.DropDownListFor(n => n.RegionID, new SelectList(Model.RegionList, "ID", "Name", Model.RegionID), "Select",
                             new { @class = "form-control  applyselect", @onchange = "FillState(this)" })
                                    @Html.ValidationMessageFor(model => model.RegionID, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-4 form-group">
                                    <label>State <sup>*</sup></label>
                                    <input type="hidden" id="hdnStateID" value="@Model.StateID" />
                                    @Html.DropDownListFor(n => n.StateID, new SelectList(Model.StateList, "ID", "Name", Model.StateID), "Select",
                             new { @class = "form-control  applyselect", @onchange = "FillCity(this)" })
                                    @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-4 form-group">
                                    <label>City <sup>*</sup></label>
                                    <input type="hidden" id="hdnCityID" value="@Model.CityID" />
                                    @Html.DropDownListFor(n => n.CityID, new SelectList(Model.CityList, "ID", "Name", Model.CityID), "Select",
                             new { @class = "form-control  applyselect" })
                                    @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-lg-4 form-group">
                                    <label>Location <sup>*</sup></label>
                                    @Html.TextBoxFor(model => model.Location, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-4 form-group">
                                    <label>Zip Code <sup>*</sup></label>
                                    @Html.TextBoxFor(model => model.Zipcode, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-12 form-group">
                                    <label>Address 1</label>
                                    @Html.TextAreaFor(model => model.Address1, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-12 form-group">
                                    <label>Address 2</label>
                                    @Html.TextAreaFor(model => model.Address2, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                    </div>

                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Bank </h3>
                </div>
                <div class="card-body pb-2">
                    <div class="row ">
                        <div class="col-md-12">
                            <div class="row">


                                <div class="col-lg-3 form-group">
                                    <label>Branch Name <sup>*</sup></label>
                                    @Html.TextBoxFor(model => model.BankBranch, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BankBranch, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-3 form-group">
                                    <label>Bank Name  <sup>*</sup></label>
                                    @Html.TextBoxFor(model => model.BankName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-lg-3 form-group">
                                    <label>Account No <sup>*</sup></label>
                                    @Html.TextBoxFor(model => model.AccountNo, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.AccountNo, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-lg-3 form-group">
                                    <label>IFSC Code <sup>*</sup></label>
                                    @Html.TextBoxFor(model => model.IFSCCode, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IFSCCode, "", new { @class = "text-danger" })
                                </div>

                            </div>
                        </div>


                    </div>

                </div>
            </div>

            <div class="card">
              
                <div class="card-body pb-2">
                    <div class="row ">
                        <div class="col-md-12 col-xl-12 col-sm-12">
                            <div class="row">
                             
                                <div class="col-md-12 button-clients">
                                    @if (string.IsNullOrEmpty(Model.DOL))
                                    {
                                        <button name="Command" value="Add" class="btn client-save btn-primary" type="submit">Save changes</button>
                                    }
                                    <a href="@Url.Action("EmployeeList",new { src = ClsCommon.Encrypt(ViewBag.MenuID+"*"+"/Masters/EmployeeList") })" type="button" class="btn client-close">cancel</a>
                                </div>
                            </div>
                        </div>


                    </div>

                </div>
            </div>
        </div>


    </div>
}

@section scripts    {
    @System.Web.Optimization.Scripts.Render("~/bundle/unobtrusivejs")
    <!--Chart js -->
    @Html.IncludeVersionedJs(Url.Content("../assets/design/plugins/fileupload/js/dropify.js"))
    @Html.IncludeVersionedJs(Url.Content("../assets/design/js/filupload.js"))

    <script>

        function fnIsPJPAutoAssign() {
            var checkAll = $("#chk_IsPJPAutoAssign").is(":checked");
            if (checkAll) {
                $("#IsPJPAutoAssign").val(true);
            }
            else {
                $("#IsPJPAutoAssign").val(false);
            }
        }

        function FillRegion() {
            var ID = $("#CountryID").find("option:selected").val();
            if (ID != '') {
                var data = GetDropDownList(ID, "Region");
                if (data != '') {
                    $("#RegionID").empty();
                    $("#RegionID").append($("<option />").val("").text("Select"));

                    $("#StateID").empty();
                    $("#StateID").append($("<option />").val("").text("Select"));
                    
                    $("#CityID").empty();
                    $("#CityID").append($("<option />").val("").text("Select"));

                    $(data).each(function () {
                        $("#RegionID").append($("<option />").val(this.ID).text(this.Name));
                        $("#RegionID").select2();

                    });
                    if ($("#hdnRegionID").val() != 0) {
                        $("#RegionID").val($("#hdnRegionID").val()).change();
                    }
                    CloseLoadingDialog();
                } else {
                    $("#RegionID").empty();
                    $("#RegionID").append($("<option />").val("").text("Select"));

                    $("#StateID").empty();
                    $("#StateID").append($("<option />").val("").text("Select"));

                    $("#CityID").empty();
                    $("#CityID").append($("<option />").val("").text("Select"));
                }
            }
            else {
                $("#RegionID").empty();
                $("#RegionID").append($("<option />").val("").text("Select"));

                $("#StateID").empty();
                $("#StateID").append($("<option />").val("").text("Select"));

                $("#CityID").empty();
                $("#CityID").append($("<option />").val("").text("Select"));
            }
        }


        function FillState() {
            var ID = $("#RegionID").find("option:selected").val();
            if (ID != '') {
                var data = GetDropDownList(ID, "State");
                if (data != '') {
                   
                    $("#StateID").empty();
                    $("#StateID").append($("<option />").val("").text("Select"));

                    $("#CityID").empty();
                    $("#CityID").append($("<option />").val("").text("Select"));

                    $(data).each(function () {
                        $("#StateID").append($("<option />").val(this.ID).text(this.Name));
                        $("#StateID").select2();

                    });
                    if ($("#hdnStateID").val() != 0) {
                        $("#StateID").val($("#hdnStateID").val()).change();
                    }
                    CloseLoadingDialog();
                } else {
                  
                    $("#StateID").empty();
                    $("#StateID").append($("<option />").val("").text("Select"));

                    $("#CityID").empty();
                    $("#CityID").append($("<option />").val("").text("Select"));
                }
            }
            else {
                $("#RegionID").empty();
                $("#RegionID").append($("<option />").val("").text("Select"));

                $("#StateID").empty();
                $("#StateID").append($("<option />").val("").text("Select"));

                $("#CityID").empty();
                $("#CityID").append($("<option />").val("").text("Select"));
            }
        }


        function FillCity() {
            var ID = $("#StateID").find("option:selected").val();
            if (ID != '') {
                var data = GetDropDownList(ID, "City");
                if (data != '') {
                    $("#CityID").empty();
                    $("#CityID").append($("<option />").val("").text("Select"));
                    $(data).each(function () {
                        $("#CityID").append($("<option />").val(this.ID).text(this.Name));
                        $("#CityID").select2();
                    });
                    if ($("#hdnCityID").val() != 0) {
                        $("#CityID").val($("#hdnCityID").val()).change();
                    }
                    CloseLoadingDialog();
                } else {
                    $("#CityID").empty();
                    $("#CityID").append($("<option />").val("").text("Select"));
                  
                }
            }
            else {
                $("#CityID").empty();
                $("#CityID").append($("<option />").val("").text("Select"));
            }




        }

        function OnSuccess(obj) {
            if (obj.Status) {
                SuccessToaster(obj.SuccessMessage);
                window.location.href = obj.RedirectURL;
            }
            else {
                CloseLoadingDialog();
                FailToaster(obj.SuccessMessage);

            }
        }

    </script>
}