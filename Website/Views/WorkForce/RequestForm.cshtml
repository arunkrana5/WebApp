@model  WorkForce.Add
@{
    var currmonth = DateTime.Now.ToString("MMM yy");
    var last1month = DateTime.Now.AddMonths(-1).ToString("MMM yy");
    var last2month = DateTime.Now.AddMonths(-2).ToString("MMM yy");
    var next1month = DateTime.Now.AddMonths(1).ToString("MMM yy");
    var next2month = DateTime.Now.AddMonths(2).ToString("MMM yy");
    var next3month = DateTime.Now.AddMonths(3).ToString("MMM yy");
    var next4month = DateTime.Now.AddMonths(4).ToString("MMM yy");
    var next5month = DateTime.Now.AddMonths(5).ToString("MMM yy");
    var next6month = DateTime.Now.AddMonths(6).ToString("MMM yy");
    var lastYear = DateTime.Now.AddYears(-1).ToString("yyyy");
    var firstMonthOfLastYear = new DateTime(DateTime.Now.AddYears(-1).Year, 1, 1).ToString("MMM yy");
    var secondMonthOfLastYear = new DateTime(DateTime.Now.AddYears(-1).Year, 2, 1).ToString("MMM yy");
    var thirdMonthOfLastYear = new DateTime(DateTime.Now.AddYears(-1).Year, 3, 1).ToString("MMM yy");
    var forthMonthOfLastYear = new DateTime(DateTime.Now.AddYears(-1).Year, 4, 1).ToString("MMM yy");
    var fifthMonthOfLastYear = new DateTime(DateTime.Now.AddYears(-1).Year, 5, 1).ToString("MMM yy");
    var sixthMonthOfLastYear = new DateTime(DateTime.Now.AddYears(-1).Year, 6, 1).ToString("MMM yy");
    if (Model.WFDocumentList == null || Model.WFDocumentList.Count == 0)
    {
        List<WorkForce.WFDocuments> list = new List<WorkForce.WFDocuments>();
        list.Add(new WorkForce.WFDocuments());
        Model.WFDocumentList = list;
    }
    string LoginID = ClsApplicationSetting.GetSessionValue("LoginID");
}
<style>
    table th {
        background-color: #005f73 !important;
        color: #fff !important;
        padding: 5px !important;
        background-image: none !important;
    }
</style>
<div class="table-section">
    <div class="page-header px-3 py-2">
        <div class="page-leftheader">
            <h4 class="page-title">Field Access</h4>
        </div>
    </div>
    @using (Ajax.BeginForm("RequestForm", "WorkForce",
        new { src = ViewBag.src },
         new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnBegin = "ShowLoadingDialog()" },
            new { @id = "_AddRequestForm", @enctype = "multipart/form-data" })
    )
    {
        <div class="card">
            <div class="card-header mb-1">
                <h4 class="card-title" style="font-weight:500; text-transform:inherit">Candidate Personal Data Field </h4>
            </div>
            <div class="card-body">
                <div class="row p-2">
                    <div class="col-lg-2 form-group">
                        <label>Branch <span style="color:red;">*</span></label>
                        <input type="hidden" id="hdnBranchID" value="@Model.BranchCode" />
                        @Html.DropDownListFor(n => n.BranchCode, new SelectList(Model.BranchList, "Name", "Name", Model.BranchCode), "Select",
 new { @class = "form-control mb-0  applyselect" })
                        @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Department <span style="color:red;">*</span> </label>
                        <input type="hidden" id="hdnDepartmentID" value="@Model.Department" />
                        @Html.DropDownListFor(n => n.Department, new SelectList(Model.DepartList, "Name", "Name", Model.Department), "Select",
 new { @class = "form-control mb-0  applyselect" })
                        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Project <span style="color:red;">*</span> </label>
                        <input type="hidden" id="hdnProjectCode" value="@Model.ProjectCode" />
                        @Html.DropDownListFor(n => n.ProjectCode, new SelectList(Model.ProjectList, "Name", "Name", Model.ProjectCode), "Select",
 new { @class = "form-control mb-0  applyselect" })
                        @Html.ValidationMessageFor(model => model.ProjectCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Title <span style="color:red;">*</span> </label>
                        <input type="hidden" id="hdnTitleID" value="@Model.DepartList" />
                        @Html.DropDownListFor(n => n.Title, new SelectList(Model.TitleList, "Name", "Name", Model.Title), "Select",
 new { @class = "form-control mb-0  applyselect" })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Name  <span style="color:red;">*</span></label>
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Gender  <span style="color:red;">*</span></label>
                        <input type="hidden" id="hdnGender" value="@Model.Gender" />
                        @Html.DropDownListFor(n => n.Gender, new SelectList(Model.GenderList, "Name", "Name", Model.Gender), "Select",
 new { @class = "form-control mb-0  applyselect" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Marital Status  <span style="color:red;">*</span></label>
                        <input type="hidden" id="hdnMaritalStatus" value="@Model.MaritalStatus" />
                        @Html.DropDownListFor(n => n.MaritalStatus, new SelectList(Model.MaritalStatusList, "Name", "Name", Model.MaritalStatus), "Select",
 new { @class = "form-control mb-0  applyselect" })
                        @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Recruitment Type <span style="color:red;">*</span> </label>
                        <input type="hidden" id="hdnRecruitmentType" value="@Model.RecruitmentType" />
                        @Html.DropDownListFor(n => n.RecruitmentType, new SelectList(Model.RecruitmentTypeList, "Name", "Name", Model.RecruitmentType), "Select",
 new { @class = "form-control mb-0  applyselect" })
                        @Html.ValidationMessageFor(model => model.RecruitmentType, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Joining Date  <span style="color:red;">*</span></label>
                        @Html.TextBoxFor(model => model.DOJ, new { @class = "form-control", @type = "date" })
                        @Html.ValidationMessageFor(model => model.DOJ, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Region  <span style="color:red;">*</span></label>
                        <input type="hidden" id="hdnRegion" value="@Model.Region" />
                        @Html.DropDownListFor(n => n.Region, new SelectList(Model.RegionList, "Name", "Name", Model.Region), "Select",
 new { @class = "form-control mb-0  applyselect" })
                        @Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>State <span style="color:red;">*</span> </label>
                        <input type="hidden" id="hdnState" value="@Model.StateCode" />
                        @Html.DropDownListFor(n => n.StateCode, new SelectList(Model.StateList, "Name", "Name", Model.StateCode), "Select",
 new { @class = "form-control mb-0  applyselect" })
                        @Html.ValidationMessageFor(model => model.StateCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>City <span style="color:red;">*</span> </label>
                        <input type="hidden" id="hdnCity" value="@Model.City" />
                        @Html.DropDownListFor(n => n.City, new SelectList(Model.CityList, "Name", "Name", Model.City), "Select",
 new { @class = "form-control mb-0  applyselect" })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Take Home(Monthly) <span style="color:red;">*</span></label>
                        @Html.TextBoxFor(model => model.InhandSalary, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.InhandSalary, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Mobile Number</label>
                        @Html.TextBoxFor(model => model.Phone, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Email ID <span style="color:red;">*</span></label>
                        @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>T-shirt Size <span style="color:red;">*</span></label>
                        <input type="hidden" id="hdnTshirtSize" value="@Model.TshirtSize" />
                        @Html.DropDownListFor(n => n.TshirtSize, new SelectList(Model.TshirtSizeList, "Name", "Name", Model.TshirtSize), "Select",
 new { @class = "form-control mb-0  applyselect" })
                        @Html.ValidationMessageFor(model => model.TshirtSize, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Aadhaar Number <span style="color:red;">*</span></label>
                        @Html.TextBoxFor(model => model.AadharNo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AadharNo, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Total Experience(Years) <span style="color:red;">*</span></label>
                        <input type="hidden" id="hdnExperience" value="@Model.TotalExperience" />
                        @Html.DropDownListFor(n => n.TotalExperience, new SelectList(Model.ExperienceList, "Name", "Name", Model.TotalExperience), "Select",
 new { @class = "form-control mb-0  applyselect" })
                        @Html.ValidationMessageFor(model => model.TotalExperience, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Date of Birth <span style="color:red;">*</span></label>
                        @Html.TextBoxFor(model => model.DOB, new { @class = "form-control", @type = "date" })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Qualification <span style="color:red;">*</span></label>
                        <input type="hidden" id="hdnQualification" value="@Model.Qualification" />
                        @Html.DropDownListFor(n => n.Qualification, new SelectList(Model.QualificationList, "Name", "Name", Model.Qualification), "Select",
 new { @class = "form-control mb-0  applyselect" })
                        @Html.ValidationMessageFor(model => model.Qualification, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Last Organization <span style="color:red;">*</span></label>
                        @Html.TextBoxFor(model => model.LastCompany, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LastCompany, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Last Company Designation <span style="color:red;">*</span></label>
                        @Html.TextBoxFor(model => model.LastCompany_Designation, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LastCompany_Designation, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Expected Take Home(Monthly) <span style="color:red;">*</span></label>
                        @Html.TextBoxFor(model => model.ExpectedSalary, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ExpectedSalary, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Previous Salary (in Hand) <span style="color:red;">*</span></label>
                        @Html.TextBoxFor(model => model.PreviousSalary_Inhand, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PreviousSalary_Inhand, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Interview Date  <span style="color:red;">*</span></label>
                        @Html.TextBoxFor(model => model.InterviewDate, new { @class = "form-control", @type = "date" })
                        @Html.ValidationMessageFor(model => model.InterviewDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Grade <span style="color:red;">*</span></label>
                        <input type="hidden" id="hdnGrade" value="@Model.Grade" />
                        @Html.DropDownListFor(n => n.Grade, new SelectList(Model.GradeList, "Name", "Name", Model.Grade), "Select",
 new { @class = "form-control mb-0  applyselect" })
                        @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Designation <span style="color:red;">*</span></label>
                        <input type="hidden" id="hdnDesignation" value="@Model.Designation" />
                        @Html.DropDownListFor(n => n.Designation, new SelectList(Model.DesigList, "Name", "Name", Model.Designation), "Select",
 new { @class = "form-control mb-0  applyselect" })
                        @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>ASM Name <span style="color:red;">*</span></label>
                        @Html.TextBoxFor(model => model.ASMName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ASMName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>ASM Contact <span style="color:red;">*</span></label>
                        @Html.TextBoxFor(model => model.ASM_Phone, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ASM_Phone, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>MW Category <span style="color:red;">*</span></label>
                        <input type="hidden" id="hdnMWCategory" value="@Model.MWCategory" />
                        @Html.DropDownListFor(n => n.MWCategory, new SelectList(Model.MWCategoryList, "Name", "Name", Model.MWCategory), "Select",
 new { @class = "form-control mb-0  applyselect" })
                        @Html.ValidationMessageFor(model => model.MWCategory, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header mb-1">
                <div class="row" style="justify-content: space-between;">
                    <h4 class="card-title" style="font-weight:500; text-transform:inherit">Candidate Documents </h4>
                    <div class="text-right">
                        <a onclick="AddNewRow(this)" class="btn btn-indigo">Add Row</a>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row p-2">
                    <div class="col-md-12 col-12">
                        <div class="table table-responsive">
                            <table id="tbl_WFDocuments" cellpadding="1" cellspacing="1" class="table table-bordered table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Sr. No.</th>
                                        <th>File Name</th>
                                        <th>Description</th>
                                        <th>Upload</th>
                                        <th>Download</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.WFDocumentList != null)
                                    {
                                        int Count = 0;
                                        for (int i = 0; i < Model.WFDocumentList.Count; i++)
                                        {
                                            Count++;
                                            <tr>
                                                <td>
                                                    <label id="lbl_@Count"> @Count</label>
                                                    @Html.HiddenFor(model => Model.WFDocumentList[i].Attach_ID, new { @class = "hdnID" })
                                                </td>

                                                <td>
                                                    @Html.DropDownListFor(n => Model.WFDocumentList[i].FileName, new SelectList(ViewBag.WFDocumentsType, "Name", "Name", Model.WFDocumentList[i].FileName), "Select", new { @class = "form-control  applyselect" })
                                                    @Html.ValidationMessageFor(model => Model.WFDocumentList[i].FileName, "", new { @class = "text-danger" })
                                                </td>
                                                <td>
                                                    @Html.TextAreaFor(model => model.WFDocumentList[i].Description, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => Model.WFDocumentList[i].Description, "", new { @class = "text-danger" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(x => Model.WFDocumentList[i].upload, new { @type = "file" })
                                                    @Html.ValidationMessageFor(model => Model.WFDocumentList[i].upload, "", new { @class = "text-danger" })
                                                </td>
                                                <td>
                                                    @if (Model.WFDocumentList[i].Attach_ID > 0)
                                                    {
                                                        <a class="shfile" href="@Model.WFDocumentList[i].FilePath" target="_blank">@Model.WFDocumentList[i].FileName</a>
                                                    }
                                                </td>
                                                <td>
                                                    @if (Count == 1)
                                                    {
                                                        <a class="remove"><i class="fa fa-window-close" aria-hidden="true"></i></a>
                                                    }
                                                    else
                                                    {
                                                        <a onclick="DeleteRow(this)" class="remove"><i class="fa fa-window-close red-clr" aria-hidden="true"></i></a>
                                                    }

                                                </td>
                                            </tr>
                                        }

                                    }
                                </tbody>
                            </table>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header mb-1">
                <h4 class="card-title" style="font-weight:500; text-transform:inherit">Store Details </h4>
            </div>
            <div class="card-body">
                <div class="row p-2">
                    <div class="col-lg-2 form-group">
                        <label>Store Code </label>
                        @Html.TextBoxFor(model => model.StoreCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StoreCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Store Name </label>
                        @Html.TextBoxFor(model => model.StoreName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StoreName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Store Contact </label>
                        @Html.TextBoxFor(model => model.StoreContact, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StoreContact, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Store Address </label>
                        @Html.TextBoxFor(model => model.StoreAddress, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StoreAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header mb-1">
                <h4 class="card-title" style="font-weight:500; text-transform:inherit">Category </h4>
            </div>
            <div class="card-body">
                <div class="row p-2">
                    <div class="col-lg-2 form-group">
                        <label>Total Counter Sales(Yearly-Quantity) </label>
                        @Html.TextBoxFor(model => model.TotalCounterSales_Qty, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TotalCounterSales_Qty, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Client Current Sales (Yearly Quantity) </label>
                        @Html.TextBoxFor(model => model.ClientCurrentSales_Qty, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClientCurrentSales_Qty, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Proposed Sales (Yearly Quantity) </label>
                        @Html.TextBoxFor(model => model.ProposedSales_Qty, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProposedSales_Qty, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Client Product Display (Quantity) </label>
                        @Html.TextBoxFor(model => model.ClientProductDisplay_Qty, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClientProductDisplay_Qty, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header mb-1">
                <h4 class="card-title" style="font-weight:500; text-transform:inherit">Primary Details </h4>
            </div>
            <div class="card-body">
                <div class="row p-2">
                    <div class="col-lg-2 form-group">
                        <label>
                            Last 2nd Month (@last2month)
                        </label>
                        @Html.TextBoxFor(model => model.Sales_Last2ndMonth, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Sales_Last2ndMonth, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Last 1st Month (@last1month) </label>
                        @Html.TextBoxFor(model => model.Sales_Last1stMonth, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Sales_Last1stMonth, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Current Month (@currmonth) </label>
                        @Html.TextBoxFor(model => model.Sales_CurrentMonth, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Sales_CurrentMonth, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>	Current Inventory</label>
                        @Html.TextBoxFor(model => model.Sales_CurrentInventory, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Sales_CurrentInventory, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="col-lg-2 form-group">
                            <label>Current YTD - Primary</label>
                            @Html.TextBoxFor(model => model.StoreAddress, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StoreAddress, "", new { @class = "text-danger" })
                        </div>*@
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header mb-1">
                <h4 class="card-title" style="font-weight:500; text-transform:inherit">Sell out Plan for next 6 months </h4>
            </div>
            <div class="card-body">
                <div class="row p-2">
                    <div class="col-lg-2 form-group">
                        <label>Branch Name</label>
                        @Html.TextBoxFor(model => model.SOP_BranchName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SOP_BranchName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Outlet Name </label>
                        @Html.TextBoxFor(model => model.SOP_OutletName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SOP_OutletName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Outlet Location </label>
                        @Html.TextBoxFor(model => model.SOP_OutletLocation, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SOP_OutletLocation, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>	CMI Connect Code</label>
                        @Html.TextBoxFor(model => model.CMIConnectCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CMIConnectCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Current Month (@currmonth)</label>
                        @Html.TextBoxFor(model => model.SOP_CurrentMonth, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SOP_CurrentMonth, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>Next Month (@next1month)</label>
                        @Html.TextBoxFor(model => model.SOP_NextMonth1, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SOP_NextMonth1, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>
                            Next Month (@next2month)
                        </label>
                        @Html.TextBoxFor(model => model.SOP_NextMonth2, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SOP_NextMonth2, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>
                            Next Month (@next3month)
                        </label>
                        @Html.TextBoxFor(model => model.SOP_NextMonth3, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SOP_NextMonth3, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>
                            Next Month (@next4month)
                        </label>
                        @Html.TextBoxFor(model => model.SOP_NextMonth4, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SOP_NextMonth4, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>
                            Next Month (@next5month)
                        </label>
                        @Html.TextBoxFor(model => model.SOP_NextMonth5, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SOP_NextMonth5, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-2 form-group">
                        <label>
                            Next Month (@next6month)
                        </label>
                        @Html.TextBoxFor(model => model.SOP_NextMonth6, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SOP_NextMonth6, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="col-lg-2 form-group">
                            <label>
                                Total
                            </label>
                            @Html.TextBoxFor(model => model.Sales_CurrentInventory, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Sales_CurrentInventory, "", new { @class = "text-danger" })
                        </div>*@
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header mb-1">
                <h4 class="card-title" style="font-weight:500; text-transform:inherit">Sell out Report - @lastYear (Year) </h4>
            </div>
            <div class="card-body">
                <div class="row p-2">
                    <div class="col-md-12">
                        <div class="form-group">
                            <table class="table" style="font-size:13px;" border="1">
                                <tbody>
                                    <tr>
                                        <th colspan="2">@firstMonthOfLastYear</th>
                                        <th colspan="2">@secondMonthOfLastYear</th>
                                        <th colspan="2">@thirdMonthOfLastYear</th>
                                        <th colspan="2">@forthMonthOfLastYear</th>
                                    </tr>
                                    <tr>
                                        <th>Target</th>
                                        <th>RAC Sales</th>
                                        <th>Target</th>
                                        <th>RAC Sales</th>
                                        <th>Target</th>
                                        <th>RAC Sales</th>
                                        <th>Target</th>
                                        <th>RAC Sales</th>
                                    </tr>
                                    <tr>
                                        <td>
                                            @Html.TextBoxFor(model => model.SOR_Target1, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SOR_Target1, "", new { @class = "text-danger" })
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(model => model.SOR_RACSales1, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SOR_RACSales1, "", new { @class = "text-danger" })
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(model => model.SOR_Target2, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SOR_Target2, "", new { @class = "text-danger" })
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(model => model.SOR_RACSales2, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SOR_RACSales2, "", new { @class = "text-danger" })
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(model => model.SOR_Target3, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SOR_Target3, "", new { @class = "text-danger" })
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(model => model.SOR_RACSales3, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SOR_RACSales3, "", new { @class = "text-danger" })
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(model => model.SOR_Target4, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SOR_Target4, "", new { @class = "text-danger" })
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(model => model.SOR_RACSales4, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SOR_RACSales4, "", new { @class = "text-danger" })
                                        </td>
                                    </tr>
                                    <tr>
                                        <th colspan="2">@fifthMonthOfLastYear</th>
                                        <th colspan="2">@sixthMonthOfLastYear</th>
                                        <th colspan="4">Total TGT. VS Ach.- @lastYear</th>
                                    </tr>
                                    <tr>
                                        <th>Target</th>
                                        <th>RAC Sales</th>
                                        <th>Target</th>
                                        <th>RAC Sales</th>
                                        <th>Total TGT.</th>
                                        <th>Total Ach.</th>
                                        <th>Ach. %</th>
                                        <th></th>
                                    </tr>
                                    <tr>
                                        <td>
                                            @Html.TextBoxFor(model => model.SOR_Target5, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SOR_Target5, "", new { @class = "text-danger" })
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(model => model.SOR_RACSales5, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SOR_RACSales5, "", new { @class = "text-danger" })
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(model => model.SOR_Target6, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SOR_Target6, "", new { @class = "text-danger" })
                                        </td>

                                        <td>
                                            @Html.TextBoxFor(model => model.SOR_RACSales6, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.SOR_RACSales6, "", new { @class = "text-danger" })
                                        </td>

                                        <td>@Html.TextBoxFor(model => model.TotalTgt, new { @class = "form-control" })</td>
                                        <td>@Html.TextBoxFor(model => model.TotalAch, new { @class = "form-control" })</td>
                                        <td>@Html.TextBoxFor(model => model.AchPercentage, new { @class = "form-control" })</td>
                                        <td></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row p-2" style="justify-content: center;">
            <button type="submit" class="btn btn-success">Submit</button>
            <a href="@Url.Action("RequestList",new { src = ClsCommon.Encrypt(ViewBag.MenuID+"*"+"/WorkForce/RequestList") })" type="button" class="btn  btndefault pull-right">Cancel</a>
        </div>
    }
</div>
@section scripts    {
    @System.Web.Optimization.Scripts.Render("~/bundle/unobtrusivejs")
<script>
        function AddNewRow() {
            var LastTRCount = parseInt($('#tbl_WFDocuments').find("tbody tr").length) - 1;
            $('.applyselect').select2("destroy");
            var $tableBody = $('#tbl_WFDocuments').find("tbody"),
                $trLast = $tableBody.find("tr:last"),
                $trNew = $trLast.clone();
            $trNew.find("td:last").html('<a onclick="DeleteRow(this)" class="remove" data-toggle="tooltip" data-original-title="Remove"><i class="fa fa-window-close red-clr" aria-hidden="true"></i></a>');


            $trNew.find("label").each(function () {
                $(this).attr({
                    'id': function (_, id) { var arr = id.split('_'); return id.replace(arr[1], LastTRCount + 1); },
                });
                $(this).html(parseInt($('#tbl_WFDocuments').find("tbody tr").length) + 1);
            });

            $trNew.find("input").each(function (i) {
                $(this).attr({
                    'id': function (_, name) { return name.replace('_' + LastTRCount + '_', '_' + (parseInt(LastTRCount) + 1) + '_'); },
                    'name': function (_, name) { return name.replace('[' + LastTRCount + ']', '[' + (parseInt(LastTRCount) + 1) + ']'); },
                });
                $(this).val('')

            });
            $trNew.find("textarea").each(function (i) {
                $(this).attr({
                    'id': function (_, name) { return name.replace('_' + LastTRCount + '_', '_' + (parseInt(LastTRCount) + 1) + '_'); },
                    'name': function (_, name) { return name.replace('[' + LastTRCount + ']', '[' + (parseInt(LastTRCount) + 1) + ']'); },
                });
                $(this).val('')
            });
            $trNew.find("a.shfile").each(function (i) {
                $(this).val('')
                $(this).html('')
            });

            $trNew.find("select").each(function (i) {
                $(this).attr({
                    'id': function (_, name) { return name.replace('_' + LastTRCount + '_', '_' + (parseInt(LastTRCount) + 1) + '_'); },
                    'name': function (_, name) { return name.replace('[' + LastTRCount + ']', '[' + (parseInt(LastTRCount) + 1) + ']'); },
                });
                $(this).val('');
            });

            $trNew.find("span").each(function (i) {
                if ($(this).attr("data-valmsg-for")) {
                    $(this).attr({
                        'data-valmsg-for': function (_, name) { return name.replace('[' + LastTRCount + ']', '[' + (parseInt(LastTRCount) + 1) + ']'); }
                    });
                }
                if ($(this).attr("for")) {
                    $(this).attr({
                        'for': function (_, name) { return name.replace('_' + LastTRCount + '_', '_' + (parseInt(LastTRCount) + 1) + '_'); }
                    });
                }
            });

            $trLast.after($trNew);
            var form = $("#_WFDocumentsForm").closest("form");
            form.removeData('validator');
            form.removeData('unobtrusiveValidation');
            $.validator.unobtrusive.parse(form);
            $(".applyselect").select2();
        }

        function DeleteRow(obj) {
            var count = 0;
            var TotalRowCount = $('#tbl_WFDocuments').find("tbody tr").length;
            ConfirmMsgBox("Are you sure want to delete", '', function () {

                $(obj).closest('tr').remove();
                $("#tbl_WFDocuments TBODY TR").each(function (i) {
                    $(this).closest("tr").find("label").each(function () {
                        $(this).attr({
                            'id': function (_, id) { var arr = id.split('_'); return id.replace(arr[1], i); },
                        });
                        $(this).html(i + 1)
                    });


                    $(this).closest("tr").find("input").each(function () {
                        $(this).attr({
                            'id': function (_, id) { return id.replace('_' + (parseInt(i) + 1) + '_', '_' + i + '_'); },
                            'name': function (_, name) { return name.replace('[' + (parseInt(i) + 1) + ']', '[' + i + ']'); },
                        });

                    });

                    $(this).closest("tr").find("textarea").each(function () {
                        $(this).attr({
                            'id': function (_, id) { return id.replace('_' + (parseInt(i) + 1) + '_', '_' + i + '_'); },
                            'name': function (_, name) { return name.replace('[' + (parseInt(i) + 1) + ']', '[' + i + ']'); },
                        });

                    });
                    $(this).closest("tr").find("select").each(function () {
                        $(this).attr({
                            'id': function (_, id) { return id.replace('_' + (parseInt(i) + 1) + '_', '_' + i + '_'); },
                            'name': function (_, name) { return name.replace('[' + (parseInt(i) + 1) + ']', '[' + i + ']'); },
                        });

                    });



                    $(this).closest("tr").find("span").each(function () {
                        if ($(this).attr("data-valmsg-for")) {
                            $(this).attr({
                                'data-valmsg-for': function (_, name) { return name.replace('[' + (parseInt(i) + 1) + ']', '[' + i + ']'); },
                            });
                        }
                        if ($(this).attr("for")) {
                            $(this).attr({
                                'for': function (_, id) { return id.replace('_' + (parseInt(i) + 1) + '_', '_' + i + '_'); },
                            });
                        }
                    });
                });
                var form = $("#_WFDocumentsForm").closest("form");
                form.removeData('validator');
                form.removeData('unobtrusiveValidation');
                $.validator.unobtrusive.parse(form);

            })
        }
        function OnSuccess(obj) {
            //console.log(obj);
            if (obj.Status) {
                SuccessToaster(obj.SuccessMessage);
                window.location.href = obj.RedirectURL;
            }
            else {
                CloseLoadingDialog();
                FailToaster(obj.SuccessMessage);
            }
        }
</script>
}
