
@model ClientVisit.SalesList
@section style{
    @System.Web.Optimization.Styles.Render("~/bundle/dataTablecss")
}
<div class="table-section">
    <div class="page-header">
        <div class="page-leftheader px-2 my-2">
            <h4 class="page-title pt-4">Add Sales</h4>
        </div>

    </div>


    @using (Ajax.BeginForm("AddSales", "ClientVisit",
            new { src = ViewBag.src },
             new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccessSales", OnBegin = "ShowLoadingDialog()" },
                new { @id = "_AddSalesForm", @enctype = "multipart/form-data" })
        )
    {
            <div class="table-responsive">
                <table id="tableBrand" cellpadding="1" cellspacing="1" class="table table-bordered table-striped table-hover">
                    <thead>
                        <tr>
                            <th >Sr. No.</th>
                            <th>Model</th>
                            <th >Qty</th>
                            <th >price</th>

                            <th>Upload</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Sales != null)
                        {
                            int Count = 0;
                            for (int i = 0; i < Model.Sales.Count; i++)
                            {
                                Count++;
                                <tr>
                                    <td>
                                        <label id="lbl_@Count"> @Count</label>
                                        @Html.HiddenFor(model => Model.Sales[i].SaleID, new { @class = "hdnID" })
                                    </td>

                                    <td>
                                        @Html.TextBoxFor(model => Model.Sales[i].Model, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => Model.Sales[i].Model, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => Model.Sales[i].Qty, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => Model.Sales[i].Qty, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        @Html.TextBoxFor(model => Model.Sales[i].Price, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => Model.Sales[i].Price, "", new { @class = "text-danger" })
                                    </td>
                                    <td>
                                        <div class="col-lg-12 form-group camerabtn">
                                            <a title="click here for open camera" onclick="OpenCamera(this,'back')" style="color: #fff">
                                                <i class="fa fa-camera" aria-hidden="true"></i>
                                            </a>
                                            <input type="hidden" id="@Html.IdFor(x => Model.Sales[i].ImageBase64String)" name="@Html.NameFor(x => Model.Sales[i].ImageBase64String)" value="" />
                                            <img class="img-responsive listimage" src="~/assets/design/images/NoImage.jpg" />
                                        </div>
                                    </td>
                                    <td>
                                        @if (Count == 1)
                                        {


                                            <a class="remove"><i class="fa fa-window-close" aria-hidden="true"></i></a>
                                        }
                                        else
                                        {
                                            <a onclick="DeleteRow(this)" class="remove"><i class="fa fa-window-close red-clr" aria-hidden="true"></i></a>
                                        }

                                    </td>
                                </tr>
                            }

                        }
                    </tbody>
                </table>

                <div class="text-right">
                    <a onclick="AddNewRow(this)" class="btn btn-indigo">Add Row</a>
                    <button type="submit" class="btn btn-indigo" name="Command" value="Add"><i class="fa fa-paper-plane" aria-hidden="true"></i> Save</button>

                    <a href="@Url.Action("MyVisit",new { src = ClsCommon.Encrypt(ViewBag.MenuID+"*"+"/ClientVisit/MyVisit") })" type="button" class="btn btndefault pull-right"><i class="fa fa-backward"></i> Back to List</a>
                </div>
            </div>

       

    }
</div>

    @section scripts    {
        @System.Web.Optimization.Scripts.Render("~/bundle/dataTablesjs")

        @System.Web.Optimization.Scripts.Render("~/bundle/unobtrusivejs")

        <script>
            function AddNewRow() {
                var LastTRCount = parseInt($('#tableBrand').find("tbody tr").length) - 1;
                var $tableBody = $('#tableBrand').find("tbody"),
                    $trLast = $tableBody.find("tr:last"),
                    $trNew = $trLast.clone();
                $trNew.find("td:last").html('<a onclick="DeleteRow(this)" class="remove" data-toggle="tooltip" data-original-title="Remove"><i class="fa fa-window-close red-clr" aria-hidden="true"></i></a>');


                $trNew.find("label").each(function () {
                    $(this).attr({
                        'id': function (_, id) { var arr = id.split('_'); return id.replace(arr[1], LastTRCount + 1); },
                    });
                    $(this).html(parseInt($('#tableBrand').find("tbody tr").length) + 1);
                });

                $trNew.find("input").each(function (i) {
                    $(this).attr({
                        'id': function (_, name) { return name.replace('_' + LastTRCount + '_', '_' + (parseInt(LastTRCount) + 1) + '_'); },
                        'name': function (_, name) { return name.replace('[' + LastTRCount + ']', '[' + (parseInt(LastTRCount) + 1) + ']'); },
                    });

                });

                $trNew.find("span").each(function (i) {
                    if ($(this).attr("data-valmsg-for")) {
                        $(this).attr({
                            'data-valmsg-for': function (_, name) { return name.replace('[' + LastTRCount + ']', '[' + (parseInt(LastTRCount) + 1) + ']'); }
                        });
                    }
                    if ($(this).attr("for")) {
                        $(this).attr({
                            'for': function (_, name) { return name.replace('_' + LastTRCount + '_', '_' + (parseInt(LastTRCount) + 1) + '_'); }
                        });
                    }
                });

                $trLast.after($trNew);
                var form = $("#_AddSalesForm").closest("form");
                form.removeData('validator');
                form.removeData('unobtrusiveValidation');
                $.validator.unobtrusive.parse(form);

            }


            function DeleteRow(obj) {
                var count = 0;
                var TotalRowCount = $('#tableBrand').find("tbody tr").length;
                ConfirmMsgBox("Are you sure want to delete", '', function () {

                    $(obj).closest('tr').remove();
                    $("#tableBrand TBODY TR").each(function (i) {
                        $(this).closest("tr").find("label").each(function () {
                            $(this).attr({
                                'id': function (_, id) { var arr = id.split('_'); return id.replace(arr[1], i); },
                            });
                            $(this).html(i + 1)
                        });


                        $(this).closest("tr").find("input").each(function () {
                            $(this).attr({
                                'id': function (_, id) { return id.replace('_' + (parseInt(i) + 1) + '_', '_' + i + '_'); },
                                'name': function (_, name) { return name.replace('[' + (parseInt(i) + 1) + ']', '[' + i + ']'); },
                            });

                        });

                        $(this).closest("tr").find("span").each(function () {
                            if ($(this).attr("data-valmsg-for")) {
                                $(this).attr({
                                    'data-valmsg-for': function (_, name) { return name.replace('[' + (parseInt(i) + 1) + ']', '[' + i + ']'); },
                                });
                            }
                            if ($(this).attr("for")) {
                                $(this).attr({
                                    'for': function (_, id) { return id.replace('_' + (parseInt(i) + 1) + '_', '_' + i + '_'); },
                                });
                            }
                        });
                    });
                    var form = $("#_AddSalesForm").closest("form");
                    form.removeData('validator');
                    form.removeData('unobtrusiveValidation');
                    $.validator.unobtrusive.parse(form);

                })
            }

            function OnSuccessSales(obj) {
                if (obj.Status) {
                    SuccessToaster(obj.SuccessMessage);
                    CloseLoadingDialog();
                    window.location.href = obj.RedirectURL;
                }
                else {
                    CloseLoadingDialog();
                    FailToaster(obj.SuccessMessage);

                }
            }
        </script>
        }
