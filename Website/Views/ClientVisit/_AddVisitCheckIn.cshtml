@model ClientVisit.AddVisitCheckIn


@using (Ajax.BeginForm("_AddVisitCheckIn", "ClientVisit",
        new { src = ViewBag.src },
         new AjaxOptions { HttpMethod = "POST", OnSuccess = "AddVisitOnSuccess", OnBegin = "ShowLoadingDialog()" },
            new { @id = "_AddVisit" })
    )
{

    @Html.HiddenFor(x => Model.CVisitID)

    <div class="modal-content modal-content-demo">
        <div class="modal-header text-azure">
            <h6 class="modal-title">Clock In  </h6>
            <button aria-label="Close" class="close" data-dismiss="modal" type="button">
                <span aria-hidden="true">×</span>
            </button>
        </div>
        <div class="modal-body">
            <div class="row">
                <div class="col-lg-12">
                    <div id="MyClockDisplay" class="clock">
                        <span class="spnlivedate"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3 col-md-6 col-sm-6 form-group">
                    <label>Dealer Name<sup>*</sup></label>
                    @Html.TextBoxFor(model => model.DealerName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DealerName, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-2 col-md-6 col-sm-6 form-group">
                    <label>Need Dealer From Master </label>
                    @Html.HiddenFor(model => model.IsMasterDealer)
                    <div class="can-toggle">
                        <input type="checkbox" id="chk_IsMasterDealer" onclick="fnIsMasterDealer();" @(Model.IsMasterDealer == 1 ? "checked" : "")>
                        <label for="chk_IsMasterDealer"></label>
                    </div>
                </div>

                <div class="col-lg-3 col-md-6 col-sm-6 form-group" id="divDealerlist" style="display:none;">
                    <label>Dealer List<sup>*</sup></label>
                    @Html.DropDownListFor(n => n.DealerID, new SelectList(Model.DealerList, "ID", "Name", Model.DealerID), "Select Dealer",
                        new { @class = "form-control applyselect" })
                    @Html.ValidationMessageFor(model => model.DealerID, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-3 col-md-6 col-sm-6 form-group">
                    <label>
                        Attendence <sup>*</sup>
                    </label>
                    @if (Model.AttendenceStatusList.Count == 1)
                    {
                        @Html.DropDownListFor(n => n.StatusID, new SelectList(Model.AttendenceStatusList, "ID", "Name", Model.StatusID),
                    new { @class = "form-control applyselect" })
                        @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })

                    }
                    else
                    {
                        @Html.DropDownListFor(n => n.StatusID, new SelectList(Model.AttendenceStatusList, "ID", "Name", Model.StatusID), "Select",
                      new { @class = "form-control applyselect" })
                        @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })
                    }
                </div>
                <div class="col-lg-3 col-md-6 col-sm-6 form-group">
                    <label>Purpose Of Visit </label>
                    @Html.TextAreaFor(model => model.PurposeOfVisit, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PurposeOfVisit, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-6 form-group" style="display:none;">
                    <label>Location  <sup>*</sup></label>
                    @Html.TextBoxFor(model => model.Location, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Latitude)
                    @Html.HiddenFor(model => model.Longitude)
                    @Html.HiddenFor(model => model.Error)
                </div>
                <div class="col-lg-12 form-group camerabtn mt-10">
                        <input type="hidden" name="@Html.NameFor(x => x.ImageBase64String)" value="" />
                        <img height="150px" width="150px" class="img-responsive" src="~/assets/design/images/NoImage.jpeg" />
                        <a title="click here for open camera" onclick="OpenCamera(this)" style="color: #fff">
                            <i class="fa fa-camera" aria-hidden="true"></i>
                        </a>
                   
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <a onclick="SendMyLocation()" class="btn btn-indigo">Refresh Location</a>
            <button class="btn btn-indigo" type="submit">Submit</button>
            <button class="btn btn-danger" data-dismiss="modal" type="button">Close</button>
        </div>
    </div>

}